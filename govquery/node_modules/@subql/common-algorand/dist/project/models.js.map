{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/project/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {BaseDataSource, ProcessorImpl} from '@subql/common';\nimport {\n  CustomDataSourceAsset as AlgorandCustomDataSourceAsset,\n  AlgorandBlockFilter,\n  AlgorandBlockHandler,\n  AlgorandCustomHandler,\n  AlgorandDataSourceKind,\n  AlgorandHandlerKind,\n  AlgorandRuntimeDataSource,\n  AlgorandRuntimeHandler,\n  AlgorandCustomDataSource,\n  AlgorandTransactionHandler,\n  AlgorandTransactionFilter,\n} from '@subql/types-algorand';\nimport {BaseMapping, FileReference, Processor} from '@subql/types-core';\n\nimport {TransactionType} from 'algosdk';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  IsArray,\n  IsBoolean,\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsObject,\n  ValidateNested,\n  IsNumber,\n  ValidateIf,\n} from 'class-validator';\n\nexport class BlockFilter implements AlgorandBlockFilter {\n  @IsOptional()\n  @IsInt()\n  modulo?: number;\n  @IsOptional()\n  @IsString()\n  timestamp?: string;\n}\n\nexport class TransactionFilter implements AlgorandTransactionFilter {\n  @IsEnum(TransactionType)\n  @IsOptional()\n  txType?: TransactionType;\n\n  @IsString()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => {\n    return o.txType === TransactionType.pay || o.txType === TransactionType.axfer || o.txType === TransactionType.appl;\n  })\n  sender?: string;\n\n  @IsString()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => {\n    return o.txType === TransactionType.pay || o.txType === TransactionType.axfer;\n  })\n  receiver?: string;\n\n  @IsBoolean()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => o.txType === TransactionType.keyreg)\n  nonParticipant?: boolean;\n\n  @IsNumber()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => {\n    return o.txType === TransactionType.acfg || o.txType === TransactionType.axfer || o.txType === TransactionType.afrz;\n  })\n  assetId?: number;\n\n  @IsBoolean()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => o.txType === TransactionType.afrz)\n  newFreezeStatus?: boolean;\n\n  @IsString()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => o.txType === TransactionType.afrz)\n  address?: string;\n\n  @IsNumber()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => o.txType === TransactionType.appl)\n  applicationId?: number;\n\n  @IsString()\n  @IsOptional()\n  @ValidateIf((o: TransactionFilter) => o.txType === TransactionType.appl)\n  applicationArgs?: string[];\n}\n\nexport class BlockHandler implements AlgorandBlockHandler {\n  @IsEnum(AlgorandHandlerKind, {groups: [AlgorandHandlerKind.Block]})\n  kind!: AlgorandHandlerKind.Block;\n\n  @IsString()\n  handler!: string;\n\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => BlockFilter)\n  filter?: AlgorandBlockFilter;\n}\n\nexport class TransactionHandler implements AlgorandTransactionHandler {\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => TransactionFilter)\n  filter?: AlgorandTransactionFilter;\n\n  @IsEnum(AlgorandHandlerKind, {groups: [AlgorandHandlerKind.Block]})\n  kind!: AlgorandHandlerKind.Transaction;\n\n  @IsString()\n  handler!: string;\n}\n\nexport class CustomHandler implements AlgorandCustomHandler {\n  @IsString()\n  kind!: string;\n\n  @IsString()\n  handler!: string;\n\n  @IsObject()\n  @IsOptional()\n  filter?: Record<string, unknown>;\n}\n\nexport class RuntimeMapping implements BaseMapping<AlgorandRuntimeHandler> {\n  @Transform((params) => {\n    const handlers: AlgorandRuntimeHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case AlgorandHandlerKind.Block:\n          return plainToClass(BlockHandler, handler);\n        case AlgorandHandlerKind.Transaction:\n          return plainToClass(TransactionHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers!: AlgorandRuntimeHandler[];\n\n  @IsString()\n  file!: string;\n}\n\nexport class CustomMapping implements BaseMapping<AlgorandCustomHandler> {\n  @IsArray()\n  @Type(() => CustomHandler)\n  @ValidateNested()\n  handlers!: CustomHandler[];\n\n  @IsString()\n  file!: string;\n}\n\nexport class RuntimeDataSourceBase extends BaseDataSource implements AlgorandRuntimeDataSource {\n  @IsEnum(AlgorandDataSourceKind, {groups: [AlgorandDataSourceKind.Runtime]})\n  kind!: AlgorandDataSourceKind.Runtime;\n\n  @Type(() => RuntimeMapping)\n  @ValidateNested()\n  mapping!: RuntimeMapping;\n}\n\nexport class FileReferenceImpl implements FileReference {\n  @IsString()\n  file!: string;\n}\n\nexport class CustomDataSourceBase<K extends string, M extends CustomMapping, O = any>\n  extends BaseDataSource\n  implements AlgorandCustomDataSource<K, M>\n{\n  @IsString()\n  kind!: K;\n\n  @Type(() => CustomMapping)\n  @ValidateNested()\n  mapping!: M;\n\n  @Type(() => FileReferenceImpl)\n  @ValidateNested({each: true})\n  assets!: Map<string, AlgorandCustomDataSourceAsset>;\n\n  @Type(() => ProcessorImpl)\n  @IsObject()\n  processor!: Processor<O>;\n}\n"]}