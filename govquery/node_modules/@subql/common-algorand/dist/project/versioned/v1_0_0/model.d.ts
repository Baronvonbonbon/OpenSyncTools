import { BaseDeploymentV1_0_0, FileType, ProjectManifestBaseImpl, CommonProjectNetworkV1_0_0 } from '@subql/common';
import { AlgorandCustomDataSource, AlgorandProjectManifestV1_0_0, AlgorandRuntimeDataSource, CustomDatasourceTemplate, RuntimeDatasourceTemplate } from '@subql/types-algorand';
import { BaseMapping, NodeSpec, ParentProject, QuerySpec, RunnerSpecs } from '@subql/types-core';
import { CustomDataSourceBase, RuntimeDataSourceBase } from '../../models';
export declare class AlgorandRunnerNodeImpl implements NodeSpec {
    name: string;
    version: string;
}
export declare class AlgorandRunnerSpecsImpl implements RunnerSpecs {
    node: NodeSpec;
    query: QuerySpec;
}
export declare class ProjectNetworkDeploymentV1_0_0 {
    chainId: string;
    bypassBlocks?: (number | string)[];
}
export declare class ProjectNetworkV1_0_0 extends CommonProjectNetworkV1_0_0<FileType> {
}
export declare class AlgorandRuntimeDataSourceV1_0_0Impl extends RuntimeDataSourceBase {
    validate(): void;
}
export declare class AlgorandCustomDataSourceV1_0_0Impl<K extends string = string, M extends BaseMapping<any> = BaseMapping<any>> extends CustomDataSourceBase<K, M> implements AlgorandCustomDataSource<K, M> {
    validate(): void;
}
export declare class RuntimeDataSourceTemplateImpl extends AlgorandRuntimeDataSourceV1_0_0Impl implements RuntimeDatasourceTemplate {
    name: string;
}
export declare class CustomDataSourceTemplateImpl extends AlgorandCustomDataSourceV1_0_0Impl implements CustomDatasourceTemplate {
    name: string;
}
export declare class DeploymentV1_0_0 extends BaseDeploymentV1_0_0 {
    network: ProjectNetworkDeploymentV1_0_0;
    runner: RunnerSpecs;
    dataSources: (AlgorandCustomDataSource | AlgorandRuntimeDataSource)[];
    templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];
}
export declare class ProjectManifestV1_0_0Impl extends ProjectManifestBaseImpl<DeploymentV1_0_0> implements AlgorandProjectManifestV1_0_0 {
    constructor();
    specVersion: string;
    name: string;
    version: string;
    network: ProjectNetworkV1_0_0;
    schema: FileType;
    dataSources: (AlgorandRuntimeDataSource | AlgorandCustomDataSource)[];
    templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];
    runner: RunnerSpecs;
    parent?: ParentProject;
    toDeployment(): string;
    validate(): void;
}
