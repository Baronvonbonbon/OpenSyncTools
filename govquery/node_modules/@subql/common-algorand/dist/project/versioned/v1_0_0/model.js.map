{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {\n  BaseDeploymentV1_0_0,\n  FileType,\n  ParentProjectModel,\n  ProjectManifestBaseImpl,\n  RunnerQueryBaseModel,\n  validateObject,\n  CommonProjectNetworkV1_0_0,\n  SemverVersionValidator,\n} from '@subql/common';\nimport {\n  AlgorandCustomDataSource,\n  AlgorandProjectManifestV1_0_0,\n  AlgorandRuntimeDataSource,\n  CustomDatasourceTemplate,\n  RuntimeDatasourceTemplate,\n} from '@subql/types-algorand';\nimport {BaseMapping, NodeSpec, ParentProject, QuerySpec, RunnerSpecs} from '@subql/types-core';\nimport {plainToInstance, Transform, Type} from 'class-transformer';\nimport {Equals, IsArray, IsObject, IsOptional, IsString, Validate, ValidateNested, validateSync} from 'class-validator';\nimport yaml from 'js-yaml';\nimport {CustomDataSourceBase, RuntimeDataSourceBase} from '../../models';\nconst ALGORAND_NODE_NAME = `@subql/node-algorand`;\n\nexport class AlgorandRunnerNodeImpl implements NodeSpec {\n  @Equals(ALGORAND_NODE_NAME, {message: `Runner algorand node name incorrect, suppose be '${ALGORAND_NODE_NAME}'`})\n  name!: string;\n\n  @IsString()\n  @Validate(SemverVersionValidator)\n  version: string = ALGORAND_NODE_NAME;\n}\n\nexport class AlgorandRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerNodeImpl)\n  node!: NodeSpec;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query!: QuerySpec;\n}\n\nexport class ProjectNetworkDeploymentV1_0_0 {\n  @IsString()\n  chainId!: string;\n  @IsOptional()\n  @IsArray()\n  bypassBlocks?: (number | string)[];\n}\n\nexport class ProjectNetworkV1_0_0 extends CommonProjectNetworkV1_0_0<FileType> {}\n\nexport class AlgorandRuntimeDataSourceV1_0_0Impl extends RuntimeDataSourceBase {\n  validate(): void {\n    return validateObject(this, 'failed to validate runtime datasource.');\n  }\n}\n\nexport class AlgorandCustomDataSourceV1_0_0Impl<\n    K extends string = string,\n    M extends BaseMapping<any> = BaseMapping<any>\n  >\n  extends CustomDataSourceBase<K, M>\n  implements AlgorandCustomDataSource<K, M>\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate custom datasource.');\n  }\n}\n\nexport class RuntimeDataSourceTemplateImpl\n  extends AlgorandRuntimeDataSourceV1_0_0Impl\n  implements RuntimeDatasourceTemplate\n{\n  @IsString()\n  name!: string;\n}\n\nexport class CustomDataSourceTemplateImpl\n  extends AlgorandCustomDataSourceV1_0_0Impl\n  implements CustomDatasourceTemplate\n{\n  @IsString()\n  name!: string;\n}\n\nexport class DeploymentV1_0_0 extends BaseDeploymentV1_0_0 {\n  @Transform((params) => {\n    if (params.value.genesisHash && !params.value.chainId) {\n      params.value.chainId = params.value.genesisHash;\n    }\n    return plainToInstance(ProjectNetworkDeploymentV1_0_0, params.value);\n  })\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV1_0_0)\n  network!: ProjectNetworkDeploymentV1_0_0;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerSpecsImpl)\n  runner!: RunnerSpecs;\n\n  @IsArray()\n  @ValidateNested()\n  @Type(() => AlgorandCustomDataSourceV1_0_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AlgorandRuntimeDataSourceV1_0_0Impl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources!: (AlgorandCustomDataSource | AlgorandRuntimeDataSource)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceTemplateImpl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n}\n\nexport class ProjectManifestV1_0_0Impl\n  extends ProjectManifestBaseImpl<DeploymentV1_0_0>\n  implements AlgorandProjectManifestV1_0_0\n{\n  constructor() {\n    super(DeploymentV1_0_0);\n  }\n\n  @Equals('1.0.0')\n  specVersion = '1.0.0';\n\n  @IsString()\n  name!: string;\n\n  @IsString()\n  version!: string;\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => ProjectNetworkV1_0_0)\n  network!: ProjectNetworkV1_0_0;\n\n  @ValidateNested()\n  @Type(() => FileType)\n  schema!: FileType;\n\n  @IsArray()\n  @ValidateNested()\n  @Type(() => AlgorandCustomDataSourceV1_0_0Impl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: AlgorandRuntimeDataSourceV1_0_0Impl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources!: (AlgorandRuntimeDataSource | AlgorandCustomDataSource)[];\n\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDataSourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDataSourceTemplateImpl, name: 'algorand/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n\n  @IsObject()\n  @ValidateNested()\n  @Type(() => AlgorandRunnerSpecsImpl)\n  runner!: RunnerSpecs;\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => ParentProjectModel)\n  parent?: ParentProject;\n\n  toDeployment(): string {\n    return yaml.dump(this._deployment, {\n      sortKeys: true,\n      condenseFlow: true,\n    });\n  }\n\n  validate(): void {\n    const errors = validateSync(this.deployment, {whitelist: true, forbidNonWhitelisted: true});\n    if (errors?.length) {\n      // TODO: print error details\n      const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n      throw new Error(`failed to parse project.yaml.\\n${errorMsgs}`);\n    }\n  }\n}\n"]}