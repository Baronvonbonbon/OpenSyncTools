{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  BaseMapping,\n  FileType,\n  NodeSpec,\n  ProjectManifestBaseImpl,\n  QuerySpec,\n  RunnerNodeImpl,\n  RunnerQueryBaseModel,\n  RunnerSpecs,\n} from '@subql/common';\nimport {SubstrateCustomDatasource, SubstrateNetworkFilter, SubstrateRuntimeDatasource} from '@subql/types';\nimport {plainToClass, Transform, TransformFnParams, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsArray,\n  IsNotEmpty,\n  IsObject,\n  IsOptional,\n  IsString,\n  Validate,\n  ValidateNested,\n  validateSync,\n} from 'class-validator';\nimport {CustomDataSourceBase, RuntimeDataSourceBase} from '../../models';\nimport {CustomDatasourceTemplate, RuntimeDatasourceTemplate, SubstrateProjectManifestV1_0_0} from './types';\n\nconst SUBSTRATE_NODE_NAME = `@subql/node`;\n\nexport class SubstrateRunnerNodeImpl extends RunnerNodeImpl {\n  @Equals(SUBSTRATE_NODE_NAME, {message: `Runner Substrate node name incorrect, suppose be '${SUBSTRATE_NODE_NAME}'`})\n  name: string;\n}\n\nfunction validateObject(object: any, errorMessage = 'failed to validate object.'): void {\n  const errors = validateSync(object, {whitelist: true, forbidNonWhitelisted: true});\n  if (errors?.length) {\n    const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n    throw new Error(`${errorMessage}\\n${errorMsgs}`);\n  }\n}\n\nexport class SubstrateRuntimeDataSourceImpl extends RuntimeDataSourceBase implements SubstrateRuntimeDatasource {\n  validate(): void {\n    return validateObject(this, 'failed to validate runtime datasource.');\n  }\n}\n\nexport class SubstrateCustomDataSourceImpl<\n    K extends string = string,\n    T extends SubstrateNetworkFilter = SubstrateNetworkFilter,\n    M extends BaseMapping<any, any> = BaseMapping<Record<string, unknown>, any>\n  >\n  extends CustomDataSourceBase<K, T, M>\n  implements SubstrateCustomDatasource<K, T, M>\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate custom datasource.');\n  }\n}\n\nexport class RuntimeDatasourceTemplateImpl extends SubstrateRuntimeDataSourceImpl implements RuntimeDatasourceTemplate {\n  @IsString()\n  name: string;\n}\n\nexport class CustomDatasourceTemplateImpl extends SubstrateCustomDataSourceImpl implements CustomDatasourceTemplate {\n  @IsString()\n  name: string;\n}\n\nexport class SubstrateRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SubstrateRunnerNodeImpl)\n  node: NodeSpec;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query: QuerySpec;\n}\n\nexport class ProjectNetworkDeploymentV1_0_0 {\n  @IsNotEmpty()\n  @Transform(({value}: TransformFnParams) => value.trim())\n  @IsString()\n  chainId: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  @IsOptional()\n  chaintypes?: FileType;\n  @IsOptional()\n  @IsArray()\n  bypassBlocks?: (number | string)[];\n}\n\nexport class ProjectNetworkV1_0_0 extends ProjectNetworkDeploymentV1_0_0 {\n  @IsString({each: true})\n  @IsOptional()\n  endpoint?: string | string[];\n  @IsString()\n  @IsOptional()\n  dictionary?: string;\n}\n\nexport class DeploymentV1_0_0 {\n  @Transform((params) => {\n    if (params.value.genesisHash && !params.value.chainId) {\n      params.value.chainId = params.value.genesisHash;\n    }\n    return plainToClass(ProjectNetworkDeploymentV1_0_0, params.value);\n  })\n  @ValidateNested()\n  @Type(() => ProjectNetworkDeploymentV1_0_0)\n  network: ProjectNetworkDeploymentV1_0_0;\n  @Equals('1.0.0')\n  @IsString()\n  specVersion: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SubstrateRunnerSpecsImpl)\n  runner: RunnerSpecs;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => SubstrateCustomDataSourceImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: SubstrateRuntimeDataSourceImpl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (SubstrateRuntimeDatasource | SubstrateCustomDatasource)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDatasourceTemplateImpl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n}\n\nexport class ProjectManifestV1_0_0Impl<D extends object = DeploymentV1_0_0>\n  extends ProjectManifestBaseImpl<D>\n  implements SubstrateProjectManifestV1_0_0\n{\n  @Equals('1.0.0')\n  specVersion: string;\n  @Type(() => SubstrateCustomDataSourceImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: SubstrateRuntimeDataSourceImpl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources: (SubstrateRuntimeDatasource | SubstrateCustomDatasource)[];\n  @Type(() => ProjectNetworkV1_0_0)\n  network: ProjectNetworkV1_0_0;\n  @IsString()\n  name: string;\n  @IsString()\n  version: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema: FileType;\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDatasourceTemplateImpl, name: 'substrate/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n  @IsObject()\n  @ValidateNested()\n  @Type(() => SubstrateRunnerSpecsImpl)\n  runner: RunnerSpecs;\n  protected _deployment: D;\n\n  get deployment(): D {\n    if (!this._deployment) {\n      this._deployment = plainToClass(DeploymentV1_0_0, this) as unknown as D;\n      validateSync(this._deployment, {whitelist: true});\n    }\n    return this._deployment;\n  }\n}\n"]}