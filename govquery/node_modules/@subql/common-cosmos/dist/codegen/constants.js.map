{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../src/codegen/constants.ts"],"names":[],"mappings":";AAAA,iEAAiE;AACjE,mCAAmC;;;AAKtB,QAAA,cAAc,GAAqB;IAC9C,mBAAmB,EAAE,IAAI;IACzB,UAAU,EAAE;QACV,OAAO,EAAE,KAAK;QACd,aAAa,EAAE,KAAK;KACrB;IACD,UAAU,EAAE;QACV,OAAO,EAAE,KAAK;QACd,oBAAoB,EAAE,IAAI;QAC1B,mBAAmB,EAAE,IAAI;QACzB,QAAQ,EAAE;YACR,QAAQ,EAAE;gBACR,OAAO;gBACP,WAAW;gBACX,gBAAgB;gBAChB,sBAAsB;gBACtB,uBAAuB;aACxB;YACD,+EAA+E;YAC/E,MAAM,EAAE,CAAC,gBAAgB,CAAC;SAC3B;QACD,OAAO,EAAE;YACP,QAAQ,EAAE,KAAK;YACf,MAAM,EAAE,KAAK;YAEb,MAAM,EAAE,KAAK;YACb,MAAM,EAAE,KAAK;YAEb,KAAK,EAAE,KAAK;YACZ,OAAO,EAAE,KAAK;YAEd,OAAO,EAAE,KAAK;YACd,SAAS,EAAE,KAAK;YAChB,SAAS,EAAE,KAAK;YAChB,OAAO,EAAE,KAAK;SACf;QACD,MAAM,EAAE;YACN,QAAQ,EAAE,KAAK;SAChB;QACD,aAAa,EAAE;YACb,QAAQ,EAAE,UAAU;YACpB,SAAS,EAAE,MAAM;YACjB,QAAQ,EAAE,KAAK;YACf,cAAc,EAAE,KAAK;SACtB;KACF;IACD,aAAa,EAAE;QACb,OAAO,EAAE,KAAK;QACd,UAAU,EAAE,EAAE;KACf;IACD,UAAU,EAAE;QACV,OAAO,EAAE,KAAK;KACf;IACD,UAAU,EAAE;QACV,mBAAmB;QACnB,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,IAAI;KAChB;CACF,CAAC;AAEK,MAAM,aAAa,GAAG,CAAC,OAAe,EAAE,SAAoC,EAAkB,EAAE;IACrG,OAAO;QACL,SAAS;QACT,OAAO;QACP,OAAO,EAAE;YACP,MAAM,EAAE;gBACN,OAAO,EAAE,KAAK;aACf;YACD,KAAK,EAAE;gBACL,OAAO,EAAE,IAAI;aACd;YACD,eAAe,EAAE;gBACf,OAAO,EAAE,IAAI;aACd;SACF;KACF,CAAC;AACJ,CAAC,CAAC;AAhBW,QAAA,aAAa,iBAgBxB","sourcesContent":["// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {TSBuilderInput, ContractFile} from '@cosmwasm/ts-codegen';\nimport {TelescopeOptions} from '@subql/x-cosmology-types';\n\nexport const TELESCOPE_OPTS: TelescopeOptions = {\n  removeUnusedImports: true,\n  interfaces: {\n    enabled: false,\n    useUnionTypes: false,\n  },\n  prototypes: {\n    enabled: false,\n    addTypeUrlToDecoders: true,\n    addTypeUrlToObjects: true,\n    excluded: {\n      packages: [\n        'amino',\n        'gogoproto',\n        // 'google.api',\n        // 'ibc.core.port.v1',\n        // 'ibc.core.types.v1',\n      ],\n      // query.proto can be removed, and it is unnecessary to generate types for them\n      protos: ['**/query.proto'],\n    },\n    methods: {\n      fromJSON: false,\n      toJSON: false,\n\n      encode: false,\n      decode: false,\n\n      toSDK: false,\n      fromSDK: false,\n\n      toAmino: false,\n      fromAmino: false,\n      fromProto: false,\n      toProto: false,\n    },\n    parser: {\n      keepCase: false,\n    },\n    typingsFormat: {\n      duration: 'duration',\n      timestamp: 'date',\n      useExact: false,\n      useDeepPartial: false,\n    },\n  },\n  aminoEncoding: {\n    enabled: false,\n    exceptions: {},\n  },\n  lcdClients: {\n    enabled: false,\n  },\n  rpcClients: {\n    // unsure if needed\n    enabled: false,\n    camelCase: true,\n  },\n};\n\nexport const COSMWASM_OPTS = (outPath: string, contracts: (ContractFile | string)[]): TSBuilderInput => {\n  return {\n    contracts,\n    outPath,\n    options: {\n      bundle: {\n        enabled: false,\n      },\n      types: {\n        enabled: true,\n      },\n      messageComposer: {\n        enabled: true,\n      },\n    },\n  };\n};\n"]}