{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/codegen/util.ts"],"names":[],"mappings":";AAAA,iEAAiE;AACjE,mCAAmC;;;;;AAOnC,wDAMC;AAED,4CAEC;AAED,kCAEC;AAnBD,gDAAwB;AACxB,0CAAiD;AAEjD,wCAA4E;AAE5E,SAAgB,sBAAsB,CAAC,QAAiB;IACtD,IAAI,CAAC;QACH,OAAO,CAAC,CAAC,IAAA,oCAA0B,EAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAAC,OAAO,CAAC,EAAE,CAAC;QACX,OAAO,KAAK,CAAC;IACf,CAAC;AACH,CAAC;AAED,SAAgB,gBAAgB,CAAC,QAAgB;IAC/C,OAAO,IAAA,2BAAkB,EAAC,QAAQ,CAAc,CAAC;AACnD,CAAC;AAED,SAAgB,WAAW,CAAC,MAAc,EAAE,SAAiB;IAC3D,OAAO,cAAI,CAAC,IAAI,CAAC,MAAM,EAAE,cAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;AACrD,CAAC","sourcesContent":["// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport path from 'path';\nimport {loadFromJsonOrYaml} from '@subql/common';\nimport {IDLObject} from 'wasm-ast-types';\nimport {parseCosmosProjectManifest, ProjectManifestImpls} from '../project';\n\nexport function validateCosmosManifest(manifest: unknown): manifest is ProjectManifestImpls {\n  try {\n    return !!parseCosmosProjectManifest(manifest);\n  } catch (e) {\n    return false;\n  }\n}\n\nexport function loadCosmwasmAbis(filePath: string): IDLObject {\n  return loadFromJsonOrYaml(filePath) as IDLObject;\n}\n\nexport function tmpProtoDir(tmpDir: string, protoPath: string): string {\n  return path.join(tmpDir, path.basename(protoPath));\n}\n"]}