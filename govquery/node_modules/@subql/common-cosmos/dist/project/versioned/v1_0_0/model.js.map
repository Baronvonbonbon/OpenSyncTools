{"version":3,"file":"model.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/model.ts"],"names":[],"mappings":"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","sourcesContent":["// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {\n  BaseDeploymentV1_0_0,\n  CommonProjectNetworkV1_0_0,\n  FileType,\n  ParentProjectModel,\n  ProjectManifestBaseImpl,\n  RunnerNodeImpl,\n  RunnerQueryBaseModel,\n  validateObject,\n} from '@subql/common';\nimport {NodeSpec, ParentProject, QuerySpec, RunnerSpecs} from '@subql/types-core';\nimport {\n  CosmosCustomDatasource,\n  CosmosCustomHandler,\n  CosmosMapping,\n  CosmosRuntimeDatasource,\n  CosmosRuntimeHandler,\n  RuntimeDatasourceTemplate,\n  CustomDatasourceTemplate,\n  CosmosProjectManifestV1_0_0,\n  CosmosChaintypes,\n} from '@subql/types-cosmos';\nimport {Transform, TransformFnParams, Type} from 'class-transformer';\nimport {Equals, IsObject, IsString, ValidateNested, IsOptional, IsArray, IsNotEmpty} from 'class-validator';\nimport {CosmosCustomDataSourceBase, CosmosCustomModuleImpl, CosmosRuntimeDataSourceBase} from '../../models';\n\nconst COSMOS_NODE_NAME = `@subql/node-cosmos`;\n\nexport class CosmosRunnerNodeImpl extends RunnerNodeImpl {\n  @Equals(COSMOS_NODE_NAME, {message: `Runner Cosmos node name incorrect, suppose be '${COSMOS_NODE_NAME}'`})\n  name: string = COSMOS_NODE_NAME;\n}\n\nexport class CosmosRuntimeDataSourceImpl\n  extends CosmosRuntimeDataSourceBase<CosmosMapping<CosmosRuntimeHandler>>\n  implements CosmosRuntimeDatasource\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate runtime datasource.');\n  }\n}\n\nexport class CosmosCustomDataSourceImpl<\n    K extends string = string,\n    M extends CosmosMapping = CosmosMapping<CosmosCustomHandler>\n  >\n  extends CosmosCustomDataSourceBase<K, M>\n  implements CosmosCustomDatasource<K, M>\n{\n  validate(): void {\n    return validateObject(this, 'failed to validate custom datasource.');\n  }\n}\n\nexport class CosmosProjectNetworkDeployment {\n  @IsString()\n  @IsNotEmpty()\n  @Transform(({value}: TransformFnParams) => value.trim())\n  chainId!: string;\n  @IsOptional()\n  @IsArray()\n  bypassBlocks?: (number | string)[];\n  @IsOptional()\n  @Type(() => CosmosCustomModuleImpl)\n  @ValidateNested({each: true})\n  chaintypes?: Map<string, CosmosCustomModuleImpl>;\n}\n\nexport class CosmosProjectNetwork extends CommonProjectNetworkV1_0_0<CosmosChaintypes> {\n  @Type(() => CosmosCustomModuleImpl)\n  @IsOptional()\n  @ValidateNested({each: true})\n  declare chaintypes?: Map<string, CosmosCustomModuleImpl>;\n}\n\nexport class RuntimeDatasourceTemplateImpl extends CosmosRuntimeDataSourceImpl implements RuntimeDatasourceTemplate {\n  @IsString()\n  name!: string;\n}\n\nexport class CustomDatasourceTemplateImpl extends CosmosCustomDataSourceImpl implements CustomDatasourceTemplate {\n  @IsString()\n  name!: string;\n}\n\nexport class CosmosRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CosmosRunnerNodeImpl)\n  node!: NodeSpec;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query!: QuerySpec;\n}\n\nexport class DeploymentV1_0_0 extends BaseDeploymentV1_0_0 {\n  @ValidateNested()\n  @Type(() => CosmosProjectNetworkDeployment)\n  network!: CosmosProjectNetworkDeployment;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CosmosRunnerSpecsImpl)\n  runner!: RunnerSpecs;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CosmosCustomDataSourceImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: CosmosRuntimeDataSourceImpl, name: 'cosmos/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources!: (CosmosRuntimeDatasource | CosmosCustomDatasource)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n}\n\nexport class ProjectManifestV1_0_0Impl\n  extends ProjectManifestBaseImpl<DeploymentV1_0_0>\n  implements CosmosProjectManifestV1_0_0\n{\n  constructor() {\n    super(DeploymentV1_0_0);\n  }\n\n  @Equals('1.0.0')\n  specVersion = '1.0.0';\n  @IsString()\n  name!: string;\n  @IsString()\n  version!: string;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CosmosProjectNetwork)\n  network!: CosmosProjectNetwork;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema!: FileType;\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CosmosCustomDataSourceImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: CosmosRuntimeDataSourceImpl, name: 'cosmos/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  dataSources!: (CosmosRuntimeDatasource | CosmosCustomDatasource)[];\n  @IsOptional()\n  @IsArray()\n  @ValidateNested()\n  @Type(() => CustomDatasourceTemplateImpl, {\n    discriminator: {\n      property: 'kind',\n      subTypes: [{value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime'}],\n    },\n    keepDiscriminatorProperty: true,\n  })\n  templates?: (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CosmosRunnerSpecsImpl)\n  runner!: RunnerSpecs;\n\n  @IsOptional()\n  @IsObject()\n  @Type(() => ParentProjectModel)\n  parent?: ParentProject;\n}\n"]}