"use strict";
// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors
// SPDX-License-Identifier: GPL-3.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectManifestV1_0_0Impl = exports.DeploymentV1_0_0 = exports.CosmosRunnerSpecsImpl = exports.CustomDatasourceTemplateImpl = exports.RuntimeDatasourceTemplateImpl = exports.CosmosProjectNetwork = exports.CosmosProjectNetworkDeployment = exports.CosmosCustomDataSourceImpl = exports.CosmosRuntimeDataSourceImpl = exports.CosmosRunnerNodeImpl = void 0;
const common_1 = require("@subql/common");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const models_1 = require("../../models");
const COSMOS_NODE_NAME = `@subql/node-cosmos`;
class CosmosRunnerNodeImpl extends common_1.RunnerNodeImpl {
    name = COSMOS_NODE_NAME;
}
exports.CosmosRunnerNodeImpl = CosmosRunnerNodeImpl;
__decorate([
    (0, class_validator_1.Equals)(COSMOS_NODE_NAME, { message: `Runner Cosmos node name incorrect, suppose be '${COSMOS_NODE_NAME}'` }),
    __metadata("design:type", String)
], CosmosRunnerNodeImpl.prototype, "name", void 0);
class CosmosRuntimeDataSourceImpl extends models_1.CosmosRuntimeDataSourceBase {
    validate() {
        return (0, common_1.validateObject)(this, 'failed to validate runtime datasource.');
    }
}
exports.CosmosRuntimeDataSourceImpl = CosmosRuntimeDataSourceImpl;
class CosmosCustomDataSourceImpl extends models_1.CosmosCustomDataSourceBase {
    validate() {
        return (0, common_1.validateObject)(this, 'failed to validate custom datasource.');
    }
}
exports.CosmosCustomDataSourceImpl = CosmosCustomDataSourceImpl;
class CosmosProjectNetworkDeployment {
    chainId;
    bypassBlocks;
    chaintypes;
}
exports.CosmosProjectNetworkDeployment = CosmosProjectNetworkDeployment;
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_transformer_1.Transform)(({ value }) => value.trim()),
    __metadata("design:type", String)
], CosmosProjectNetworkDeployment.prototype, "chainId", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    __metadata("design:type", Array)
], CosmosProjectNetworkDeployment.prototype, "bypassBlocks", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => models_1.CosmosCustomModuleImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosProjectNetworkDeployment.prototype, "chaintypes", void 0);
class CosmosProjectNetwork extends common_1.CommonProjectNetworkV1_0_0 {
}
exports.CosmosProjectNetwork = CosmosProjectNetwork;
__decorate([
    (0, class_transformer_1.Type)(() => models_1.CosmosCustomModuleImpl),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosProjectNetwork.prototype, "chaintypes", void 0);
class RuntimeDatasourceTemplateImpl extends CosmosRuntimeDataSourceImpl {
    name;
}
exports.RuntimeDatasourceTemplateImpl = RuntimeDatasourceTemplateImpl;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RuntimeDatasourceTemplateImpl.prototype, "name", void 0);
class CustomDatasourceTemplateImpl extends CosmosCustomDataSourceImpl {
    name;
}
exports.CustomDatasourceTemplateImpl = CustomDatasourceTemplateImpl;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomDatasourceTemplateImpl.prototype, "name", void 0);
class CosmosRunnerSpecsImpl {
    node;
    query;
}
exports.CosmosRunnerSpecsImpl = CosmosRunnerSpecsImpl;
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerNodeImpl),
    __metadata("design:type", Object)
], CosmosRunnerSpecsImpl.prototype, "node", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => common_1.RunnerQueryBaseModel),
    __metadata("design:type", Object)
], CosmosRunnerSpecsImpl.prototype, "query", void 0);
class DeploymentV1_0_0 extends common_1.BaseDeploymentV1_0_0 {
    network;
    runner;
    dataSources;
    templates;
}
exports.DeploymentV1_0_0 = DeploymentV1_0_0;
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosProjectNetworkDeployment),
    __metadata("design:type", CosmosProjectNetworkDeployment)
], DeploymentV1_0_0.prototype, "network", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerSpecsImpl),
    __metadata("design:type", Object)
], DeploymentV1_0_0.prototype, "runner", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosCustomDataSourceImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: CosmosRuntimeDataSourceImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], DeploymentV1_0_0.prototype, "dataSources", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CustomDatasourceTemplateImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], DeploymentV1_0_0.prototype, "templates", void 0);
class ProjectManifestV1_0_0Impl extends common_1.ProjectManifestBaseImpl {
    constructor() {
        super(DeploymentV1_0_0);
    }
    specVersion = '1.0.0';
    name;
    version;
    network;
    schema;
    dataSources;
    templates;
    runner;
    parent;
}
exports.ProjectManifestV1_0_0Impl = ProjectManifestV1_0_0Impl;
__decorate([
    (0, class_validator_1.Equals)('1.0.0'),
    __metadata("design:type", Object)
], ProjectManifestV1_0_0Impl.prototype, "specVersion", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestV1_0_0Impl.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], ProjectManifestV1_0_0Impl.prototype, "version", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosProjectNetwork),
    __metadata("design:type", CosmosProjectNetwork)
], ProjectManifestV1_0_0Impl.prototype, "network", void 0);
__decorate([
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => common_1.FileType),
    __metadata("design:type", common_1.FileType)
], ProjectManifestV1_0_0Impl.prototype, "schema", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosCustomDataSourceImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: CosmosRuntimeDataSourceImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], ProjectManifestV1_0_0Impl.prototype, "dataSources", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CustomDatasourceTemplateImpl, {
        discriminator: {
            property: 'kind',
            subTypes: [{ value: RuntimeDatasourceTemplateImpl, name: 'cosmos/Runtime' }],
        },
        keepDiscriminatorProperty: true,
    }),
    __metadata("design:type", Array)
], ProjectManifestV1_0_0Impl.prototype, "templates", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => CosmosRunnerSpecsImpl),
    __metadata("design:type", Object)
], ProjectManifestV1_0_0Impl.prototype, "runner", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    (0, class_transformer_1.Type)(() => common_1.ParentProjectModel),
    __metadata("design:type", Object)
], ProjectManifestV1_0_0Impl.prototype, "parent", void 0);
//# sourceMappingURL=model.js.map