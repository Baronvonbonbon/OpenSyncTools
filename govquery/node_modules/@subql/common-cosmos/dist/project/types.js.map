{"version":3,"file":"types.js","sourceRoot":"","sources":["../../src/project/types.ts"],"names":[],"mappings":";AAAA,iEAAiE;AACjE,mCAAmC;;;AAMnC,8EAA8E;AAC9E,oDAa6B;AAT3B,iHAAA,iBAAiB,OAAA;AAOjB,oHAAA,oBAAoB,OAAA","sourcesContent":["// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {IProjectManifest, ProjectNetworkConfig} from '@subql/types-core';\nimport {CosmosDatasource, CustomModule} from '@subql/types-cosmos';\nimport {Root} from 'protobufjs';\n\n// All of these used to be redefined in this file, re-exporting for simplicity\nexport {\n  CosmosRuntimeHandler,\n  CosmosCustomHandler,\n  CosmosHandler,\n  CosmosHandlerKind,\n  CosmosDatasource as CosmosDataSource,\n  CosmosBlockFilter,\n  CosmosMessageFilter,\n  CosmosEventFilter,\n  CosmosDatasourceProcessor,\n  CosmosHandlerFilter,\n  CosmosDatasourceKind,\n  CosmosRuntimeHandlerInputMap as CosmosRuntimeHandlerInputMap,\n} from '@subql/types-cosmos';\n\nexport type ICosmosProjectManifest = IProjectManifest<CosmosDatasource>;\n\nexport interface CosmosProjectNetworkConfig extends ProjectNetworkConfig {\n  chainId?: string;\n}\n\nexport type CosmosChainType = CustomModule & {\n  proto: Root;\n  packageName?: string;\n};\n\nexport type CosmosProjectNetConfig = CosmosProjectNetworkConfig & {\n  chainId: string;\n  chaintypes: Map<string, CosmosChainType> & {protoRoot: protobuf.Root};\n};\n"]}