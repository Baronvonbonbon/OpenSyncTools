import { FileReference, BaseTemplateDataSource } from '@subql/types-core';
import { SecondLayerHandlerProcessor, CosmosCustomDatasource, CosmosDatasource, CosmosHandlerKind, CosmosRuntimeDatasource, CustomDatasourceTemplate, RuntimeDatasourceTemplate, SecondLayerHandlerProcessorArray } from '@subql/types-cosmos';
import { ValidationArguments, ValidatorConstraintInterface } from 'class-validator';
export declare function isCustomCosmosDs(ds: CosmosDatasource | BaseTemplateDataSource<CosmosDatasource>): ds is CosmosCustomDatasource<string>;
export declare function isRuntimeCosmosDs(ds: CosmosDatasource | BaseTemplateDataSource<CosmosDatasource>): ds is CosmosRuntimeDatasource;
type DefaultFilter = Record<string, unknown>;
export declare function isBlockHandlerProcessor<E>(hp: SecondLayerHandlerProcessorArray<CosmosHandlerKind, DefaultFilter, unknown>): hp is SecondLayerHandlerProcessor<CosmosHandlerKind.Block, DefaultFilter, E>;
export declare function isTransactionHandlerProcessor<E>(hp: SecondLayerHandlerProcessorArray<CosmosHandlerKind, DefaultFilter, unknown>): hp is SecondLayerHandlerProcessor<CosmosHandlerKind.Transaction, DefaultFilter, E>;
export declare function isMessageHandlerProcessor<E>(hp: SecondLayerHandlerProcessorArray<CosmosHandlerKind, DefaultFilter, unknown>): hp is SecondLayerHandlerProcessor<CosmosHandlerKind.Message, DefaultFilter, E>;
export declare function isEventHandlerProcessor<E>(hp: SecondLayerHandlerProcessorArray<CosmosHandlerKind, DefaultFilter, unknown>): hp is SecondLayerHandlerProcessor<CosmosHandlerKind.Event, DefaultFilter, E>;
export declare function isCosmosTemplates(templatesData: any, specVersion: string): templatesData is (RuntimeDatasourceTemplate | CustomDatasourceTemplate)[];
export declare class FileReferenceImp implements ValidatorConstraintInterface {
    validate(value: Map<string, FileReference>): boolean;
    defaultMessage(args: ValidationArguments): string;
    private isValidFileReference;
}
export {};
