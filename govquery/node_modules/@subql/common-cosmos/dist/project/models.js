"use strict";
// // Copyright 2020-2025 SubQuery Pte Ltd authors & contributors
// SPDX-License-Identifier: GPL-3.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CosmosCustomDataSourceBase = exports.CosmosCustomModuleImpl = exports.CosmosFileReferenceImpl = exports.CosmosRuntimeDataSourceBase = exports.CosmosProcessorOptions = exports.CustomMapping = exports.RuntimeMapping = exports.CustomHandler = exports.EventHandler = exports.MessageHandler = exports.TransactionHandler = exports.BlockHandler = exports.EventFilter = exports.MessageFilter = exports.TxFilter = exports.BlockFilter = void 0;
const common_1 = require("@subql/common");
const types_cosmos_1 = require("@subql/types-cosmos");
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const utils_1 = require("./utils");
class BlockFilter {
    modulo;
    timestamp;
}
exports.BlockFilter = BlockFilter;
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], BlockFilter.prototype, "modulo", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], BlockFilter.prototype, "timestamp", void 0);
class TxFilter {
    includeFailedTx;
}
exports.TxFilter = TxFilter;
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], TxFilter.prototype, "includeFailedTx", void 0);
class MessageFilter extends TxFilter {
    type;
    values;
    contractCall;
}
exports.MessageFilter = MessageFilter;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], MessageFilter.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], MessageFilter.prototype, "values", void 0);
__decorate([
    (0, class_validator_1.ValidateIf)((o) => o.type === '/cosmwasm.wasm.v1.MsgExecuteContract'),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], MessageFilter.prototype, "contractCall", void 0);
class EventFilter {
    type;
    messageFilter;
    attributes;
}
exports.EventFilter = EventFilter;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], EventFilter.prototype, "type", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => MessageFilter),
    __metadata("design:type", Object)
], EventFilter.prototype, "messageFilter", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], EventFilter.prototype, "attributes", void 0);
class BlockHandler {
    kind;
    handler;
    filter;
}
exports.BlockHandler = BlockHandler;
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.CosmosHandlerKind, { groups: [types_cosmos_1.CosmosHandlerKind.Block] }),
    __metadata("design:type", String)
], BlockHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], BlockHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => BlockFilter),
    __metadata("design:type", Object)
], BlockHandler.prototype, "filter", void 0);
class TransactionHandler {
    kind;
    handler;
}
exports.TransactionHandler = TransactionHandler;
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.CosmosHandlerKind, { groups: [types_cosmos_1.CosmosHandlerKind.Transaction] }),
    __metadata("design:type", String)
], TransactionHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], TransactionHandler.prototype, "handler", void 0);
class MessageHandler {
    kind;
    handler;
    filter;
}
exports.MessageHandler = MessageHandler;
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.CosmosHandlerKind, { groups: [types_cosmos_1.CosmosHandlerKind.Message] }),
    __metadata("design:type", String)
], MessageHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], MessageHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => MessageFilter),
    __metadata("design:type", Object)
], MessageHandler.prototype, "filter", void 0);
class EventHandler {
    filter;
    kind;
    handler;
}
exports.EventHandler = EventHandler;
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => EventFilter),
    __metadata("design:type", Object)
], EventHandler.prototype, "filter", void 0);
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.CosmosHandlerKind, { groups: [types_cosmos_1.CosmosHandlerKind.Event] }),
    __metadata("design:type", String)
], EventHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], EventHandler.prototype, "handler", void 0);
class CustomHandler {
    kind;
    handler;
    filter;
}
exports.CustomHandler = CustomHandler;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomHandler.prototype, "kind", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomHandler.prototype, "handler", void 0);
__decorate([
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], CustomHandler.prototype, "filter", void 0);
class RuntimeMapping {
    handlers;
    file;
}
exports.RuntimeMapping = RuntimeMapping;
__decorate([
    (0, class_transformer_1.Transform)((params) => {
        const handlers = params.value;
        return handlers.map((handler) => {
            switch (handler.kind) {
                case types_cosmos_1.CosmosHandlerKind.Event:
                    return (0, class_transformer_1.plainToClass)(EventHandler, handler);
                case types_cosmos_1.CosmosHandlerKind.Message:
                    return (0, class_transformer_1.plainToClass)(MessageHandler, handler);
                case types_cosmos_1.CosmosHandlerKind.Transaction:
                    return (0, class_transformer_1.plainToClass)(TransactionHandler, handler);
                case types_cosmos_1.CosmosHandlerKind.Block:
                    return (0, class_transformer_1.plainToClass)(BlockHandler, handler);
                default:
                    throw new Error(`handler ${handler.kind} not supported`);
            }
        });
    }),
    (0, class_validator_1.IsArray)(),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], RuntimeMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RuntimeMapping.prototype, "file", void 0);
class CustomMapping {
    handlers;
    file;
}
exports.CustomMapping = CustomMapping;
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_transformer_1.Type)(() => CustomHandler),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Array)
], CustomMapping.prototype, "handlers", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CustomMapping.prototype, "file", void 0);
class CosmosProcessorOptions {
    abi;
}
exports.CosmosProcessorOptions = CosmosProcessorOptions;
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosProcessorOptions.prototype, "abi", void 0);
class CosmosRuntimeDataSourceBase extends common_1.BaseDataSource {
    kind;
    mapping;
    assets;
    options;
}
exports.CosmosRuntimeDataSourceBase = CosmosRuntimeDataSourceBase;
__decorate([
    (0, class_validator_1.IsEnum)(types_cosmos_1.CosmosDatasourceKind, { groups: [types_cosmos_1.CosmosDatasourceKind.Runtime] }),
    __metadata("design:type", String)
], CosmosRuntimeDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => RuntimeMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Object)
], CosmosRuntimeDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Validate)(utils_1.FileReferenceImp),
    __metadata("design:type", Map)
], CosmosRuntimeDataSourceBase.prototype, "assets", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => CosmosProcessorOptions),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", CosmosProcessorOptions)
], CosmosRuntimeDataSourceBase.prototype, "options", void 0);
class CosmosFileReferenceImpl {
    file;
}
exports.CosmosFileReferenceImpl = CosmosFileReferenceImpl;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosFileReferenceImpl.prototype, "file", void 0);
class CosmosCustomModuleImpl {
    file;
    messages;
}
exports.CosmosCustomModuleImpl = CosmosCustomModuleImpl;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomModuleImpl.prototype, "file", void 0);
__decorate([
    (0, class_validator_1.IsArray)(),
    (0, class_transformer_1.Type)(() => String),
    __metadata("design:type", Array)
], CosmosCustomModuleImpl.prototype, "messages", void 0);
class CosmosCustomDataSourceBase extends common_1.BaseDataSource {
    kind;
    mapping;
    assets;
    processor;
}
exports.CosmosCustomDataSourceBase = CosmosCustomDataSourceBase;
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], CosmosCustomDataSourceBase.prototype, "kind", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CustomMapping),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", Object)
], CosmosCustomDataSourceBase.prototype, "mapping", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => CosmosFileReferenceImpl),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Map)
], CosmosCustomDataSourceBase.prototype, "assets", void 0);
__decorate([
    (0, class_transformer_1.Type)(() => common_1.ProcessorImpl),
    (0, class_validator_1.IsObject)(),
    __metadata("design:type", Object)
], CosmosCustomDataSourceBase.prototype, "processor", void 0);
//# sourceMappingURL=models.js.map