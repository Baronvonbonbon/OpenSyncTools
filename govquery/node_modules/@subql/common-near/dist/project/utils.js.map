{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/project/utils.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;AAcnC,0DAIC;AAED,sEAIC;AAED,4DAIC;AAED,8DAIC;AAED,gCAIC;AAED,kCAEC;AA5CD,kDAU2B;AAE3B,SAAgB,uBAAuB,CACrC,EAAiE;IAEjE,OAAO,EAAE,CAAC,eAAe,KAAK,4BAAe,CAAC,KAAK,CAAC;AACtD,CAAC;AAED,SAAgB,6BAA6B,CAC3C,EAAiE;IAEjE,OAAO,EAAE,CAAC,eAAe,KAAK,4BAAe,CAAC,WAAW,CAAC;AAC5D,CAAC;AAED,SAAgB,wBAAwB,CACtC,EAAiE;IAEjE,OAAO,EAAE,CAAC,eAAe,KAAK,4BAAe,CAAC,MAAM,CAAC;AACvD,CAAC;AAED,SAAgB,yBAAyB,CACvC,EAAiE;IAEjE,OAAO,EAAE,CAAC,eAAe,KAAK,4BAAe,CAAC,OAAO,CAAC;AACxD,CAAC;AAED,SAAgB,UAAU,CACxB,EAAkB;IAElB,OAAO,EAAE,CAAC,IAAI,KAAK,+BAAkB,CAAC,OAAO,IAAI,CAAC,CAAE,EAAsC,CAAC,SAAS,CAAC;AACvG,CAAC;AAED,SAAgB,WAAW,CAAC,EAAkB;IAC5C,OAAO,EAAE,CAAC,IAAI,KAAK,+BAAkB,CAAC,OAAO,CAAC;AAChD,CAAC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {\n  SecondLayerHandlerProcessor,\n  SecondLayerHandlerProcessorArray,\n  NearCustomDatasource,\n  NearDatasource,\n  NearDatasourceKind,\n  NearHandlerKind,\n  NearRuntimeDatasource,\n  NearMapping,\n  NearCustomHandler,\n} from '@subql/types-near';\n\nexport function isBlockHandlerProcessor<T extends Record<string, unknown>, E>(\n  hp: SecondLayerHandlerProcessorArray<NearHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<NearHandlerKind.Block, T, E> {\n  return hp.baseHandlerKind === NearHandlerKind.Block;\n}\n\nexport function isTransactionHandlerProcessor<T extends Record<string, unknown>, E>(\n  hp: SecondLayerHandlerProcessorArray<NearHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<NearHandlerKind.Transaction, T, E> {\n  return hp.baseHandlerKind === NearHandlerKind.Transaction;\n}\n\nexport function isActionHandlerProcessor<T extends Record<string, unknown>, E>(\n  hp: SecondLayerHandlerProcessorArray<NearHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<NearHandlerKind.Action, T, E> {\n  return hp.baseHandlerKind === NearHandlerKind.Action;\n}\n\nexport function isReceiptHandlerProcessor<T extends Record<string, unknown>, E>(\n  hp: SecondLayerHandlerProcessorArray<NearHandlerKind, T, unknown>\n): hp is SecondLayerHandlerProcessor<NearHandlerKind.Receipt, T, E> {\n  return hp.baseHandlerKind === NearHandlerKind.Receipt;\n}\n\nexport function isCustomDs<F extends NearMapping<NearCustomHandler>>(\n  ds: NearDatasource\n): ds is NearCustomDatasource<string, F> {\n  return ds.kind !== NearDatasourceKind.Runtime && !!(ds as NearCustomDatasource<string, F>).processor;\n}\n\nexport function isRuntimeDs(ds: NearDatasource): ds is NearRuntimeDatasource {\n  return ds.kind === NearDatasourceKind.Runtime;\n}\n"]}