import { BaseDataSource, BlockFilterImpl } from '@subql/common';
import { BaseMapping, FileReference, Processor } from '@subql/types-core';
import { CustomDataSourceAsset as NearCustomDataSourceAsset, NearBlockFilter, NearBlockHandler, NearTransactionHandler, NearActionFilter, NearCustomHandler, NearDatasourceKind, NearTransactionFilter, NearActionHandler, NearHandlerKind, NearRuntimeDatasource, NearRuntimeHandler, NearCustomDatasource, ActionType, NearReceiptHandler, NearReceiptFilter } from '@subql/types-near';
import { ValidationOptions } from 'class-validator';
export declare class BlockFilter extends BlockFilterImpl implements NearBlockFilter {
}
export declare class TransactionFilter extends BlockFilter implements NearTransactionFilter {
    sender?: string;
    receiver?: string;
}
export declare function IsActionType(validationOptions?: ValidationOptions): (object: object, propertyName: string) => void;
export declare class ReceiptFilter extends TransactionFilter implements NearReceiptFilter {
    signer?: string;
}
export declare class ActionFilter extends ReceiptFilter implements NearActionFilter {
    type: ActionType;
    methodName?: string;
    args?: string;
    publicKey?: string;
    accessKey?: string;
    beneficiaryId?: string;
}
export declare class BlockHandler implements NearBlockHandler {
    filter?: NearBlockFilter;
    kind: NearHandlerKind.Block;
    handler: string;
}
export declare class TransactionHandler implements NearTransactionHandler {
    filter?: NearTransactionFilter;
    kind: NearHandlerKind.Transaction;
    handler: string;
}
export declare class ActionHandler implements NearActionHandler {
    filter?: NearActionFilter;
    kind: NearHandlerKind.Action;
    handler: string;
}
export declare class ReceiptHandler implements NearReceiptHandler {
    filter?: NearReceiptFilter;
    kind: NearHandlerKind.Receipt;
    handler: string;
}
export declare class CustomHandler implements NearCustomHandler {
    kind: string;
    handler: string;
    filter?: Record<string, unknown>;
}
export declare class RuntimeMapping implements BaseMapping<NearRuntimeHandler> {
    handlers: NearRuntimeHandler[];
    file: string;
}
export declare class CustomMapping implements BaseMapping<NearCustomHandler> {
    handlers: CustomHandler[];
    file: string;
}
export declare class RuntimeDataSourceBase extends BaseDataSource implements NearRuntimeDatasource {
    kind: NearDatasourceKind.Runtime;
    mapping: RuntimeMapping;
}
export declare class FileReferenceImpl implements FileReference {
    file: string;
}
export declare class CustomDataSourceBase<K extends string, M extends CustomMapping, O = any> extends BaseDataSource implements NearCustomDatasource<K, M> {
    kind: K;
    mapping: M;
    assets: Map<string, NearCustomDataSourceAsset>;
    processor: Processor;
}
