{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/project/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport fs from 'fs';\nimport os from 'os';\nimport path from 'path';\nimport {\n  BaseDataSource,\n  FileReference,\n  IEndpointConfig,\n  MultichainProjectManifest,\n  ProjectRootAndManifest,\n} from '@subql/types-core';\nimport {ClassConstructor, plainToInstance} from 'class-transformer';\nimport {\n  registerDecorator,\n  validateSync,\n  ValidationArguments,\n  ValidationOptions,\n  ValidatorConstraint,\n  ValidatorConstraintInterface,\n} from 'class-validator';\nimport * as yaml from 'js-yaml';\nimport Pino from 'pino';\nimport {lt, prerelease, satisfies, valid, validRange} from 'semver';\nimport updateNotifier, {Package} from 'update-notifier';\nimport {RUNNER_ERROR_REGEX} from '../constants';\nimport {CommonEndpointConfig} from './versioned';\n\nexport const DEFAULT_MULTICHAIN_MANIFEST = 'subquery-multichain.yaml';\nexport const DEFAULT_MULTICHAIN_TS_MANIFEST = 'subquery-multichain.ts';\nexport const DEFAULT_MANIFEST = 'project.yaml';\nexport const DEFAULT_TS_MANIFEST = 'project.ts';\nexport const DEFAULT_ENV = '.env';\nexport const DEFAULT_ENV_DEVELOP = '.env.develop';\nexport const DEFAULT_ENV_LOCAL = '.env.local';\nexport const DEFAULT_ENV_DEVELOP_LOCAL = '.env.develop.local';\nexport const DEFAULT_GIT_IGNORE = '.gitignore';\n\nexport function isFileReference(value: any): value is FileReference {\n  return value?.file && typeof value.file === 'string';\n}\n\n// Input manifest here, we might need to handler other error later on\nexport function handleCreateSubqueryProjectError(err: Error, pjson: any, rawManifest: any, logger: Pino.Logger): void {\n  if (JSON.stringify(err.message).includes(RUNNER_ERROR_REGEX)) {\n    logger.error(`Failed to init project, required runner is ${rawManifest.runner.node.name}, got ${pjson.name}`);\n  } else {\n    logger.error(err, 'Create Subquery project from given path failed!');\n  }\n}\n\nexport async function makeTempDir(): Promise<string> {\n  const sep = path.sep;\n  const tmpDir = os.tmpdir();\n  const tempPath = await fs.promises.mkdtemp(`${tmpDir}${sep}`);\n  return tempPath;\n}\n\nexport function getProjectRootAndManifest(subquery: string): ProjectRootAndManifest {\n  const project: ProjectRootAndManifest = {\n    root: '',\n    manifests: [],\n  };\n\n  const stats = fs.statSync(subquery);\n\n  if (stats.isDirectory()) {\n    project.root = subquery;\n\n    if (fs.existsSync(path.resolve(subquery, DEFAULT_MANIFEST))) {\n      project.manifests.push(path.resolve(subquery, DEFAULT_MANIFEST));\n    }\n    // Then check for a 'multichain manifest'\n    else if (fs.existsSync(path.resolve(subquery, DEFAULT_MULTICHAIN_MANIFEST))) {\n      const multichainManifestContent: MultichainProjectManifest = yaml.load(\n        fs.readFileSync(path.resolve(subquery, DEFAULT_MULTICHAIN_MANIFEST), 'utf8')\n      ) as MultichainProjectManifest;\n\n      if (!multichainManifestContent.projects || !Array.isArray(multichainManifestContent.projects)) {\n        throw new Error('Multichain manifest does not contain a valid \"projects\" field');\n      }\n\n      addMultichainManifestProjects(subquery, multichainManifestContent, project);\n    } else {\n      throw new Error(`Unable to resolve manifest file from given directory: ${subquery}`);\n    }\n  } else if (stats.isFile()) {\n    const {dir, ext} = path.parse(subquery);\n    if (!extensionIsTs(ext) && !extensionIsYamlOrJSON(ext)) {\n      throw new Error(`Extension ${ext} not supported for project ${subquery}`);\n    }\n    project.root = dir;\n    let projectYamlPath = subquery;\n\n    if (extensionIsTs(ext)) {\n      projectYamlPath = tsProjectYamlPath(subquery);\n      if (!fs.existsSync(projectYamlPath)) {\n        throw new Error(\n          `Could not find manifest ${projectYamlPath}, if pointing to a typescript manifest, please ensure build successfully`\n        );\n      }\n    }\n\n    const multichainManifestContent = yaml.load(fs.readFileSync(projectYamlPath, 'utf8')) as MultichainProjectManifest;\n    // The project manifest could be empty\n    if (multichainManifestContent === null) {\n      throw new Error(`Read manifest content is null, ${projectYamlPath}`);\n    } else if (multichainManifestContent.projects && Array.isArray(multichainManifestContent.projects)) {\n      addMultichainManifestProjects(dir, multichainManifestContent, project);\n    } else {\n      project.manifests.push(projectYamlPath);\n    }\n  }\n\n  project.root = path.resolve(project.root);\n\n  // Convert manifest paths to be relative to the project root\n  project.manifests = project.manifests.map((manifestPath) => {\n    return path.relative(project.root, manifestPath);\n  });\n\n  return project;\n}\n\nfunction addMultichainManifestProjects(\n  parentDir: string,\n  multichainManifestContent: any,\n  project: ProjectRootAndManifest\n) {\n  for (const projectPath of multichainManifestContent.projects) {\n    const {ext} = path.parse(projectPath);\n    if (!extensionIsYamlOrJSON(ext)) {\n      throw new Error(`Extension ${ext} not supported for project ${projectPath}`);\n    }\n\n    if (fs.existsSync(path.resolve(parentDir, projectPath))) {\n      project.manifests.push(path.resolve(parentDir, projectPath));\n    } else {\n      throw new Error(`Project ${projectPath} not found`);\n    }\n  }\n\n  if (project.manifests.length === 0) {\n    throw new Error('None of the project files specified in the multichain manifest could be found');\n  }\n}\n\nexport function getMultichainManifestPath(subquery: string): string | undefined {\n  const stats = fs.statSync(subquery);\n  let multichainManifestPath: string | undefined;\n  let projectRoot: string | undefined;\n\n  if (stats.isDirectory()) {\n    projectRoot = subquery;\n    const multichainManifestCandidate = path.resolve(subquery, DEFAULT_MULTICHAIN_MANIFEST);\n    if (fs.existsSync(multichainManifestCandidate)) {\n      multichainManifestPath = multichainManifestCandidate;\n    }\n  } else if (stats.isFile()) {\n    const {dir, ext} = path.parse(subquery);\n    projectRoot = dir;\n    if (extensionIsYamlOrJSON(ext)) {\n      const multichainManifestContent = yaml.load(fs.readFileSync(subquery, 'utf8')) as MultichainProjectManifest;\n      if (multichainManifestContent.projects && Array.isArray(multichainManifestContent.projects)) {\n        multichainManifestPath = path.resolve(dir, subquery);\n      }\n    }\n  }\n\n  if (multichainManifestPath && projectRoot) {\n    return path.relative(projectRoot, multichainManifestPath);\n  }\n\n  return undefined;\n}\n\nexport function validateSemver(current: string, required: string): boolean {\n  return satisfies(current, required, {includePrerelease: true});\n}\n\n@ValidatorConstraint({name: 'semver', async: false})\nexport class SemverVersionValidator implements ValidatorConstraintInterface {\n  validate(value: string | null | undefined): boolean {\n    if (valid(value) === null) {\n      return validRange(value, {includePrerelease: false}) !== null;\n    } else {\n      return prerelease(value || '') === null;\n    }\n  }\n  defaultMessage(args: ValidationArguments): string {\n    return `'${args.value}' is not a valid version. Please provide a valid semver`;\n  }\n}\n\nexport async function delay(sec: number): Promise<void> {\n  return new Promise((resolve) => {\n    setTimeout(resolve, sec * 1000);\n  });\n}\n\nexport function validateObject(object: any, errorMessage = 'failed to validate object.'): void {\n  const errors = validateSync(object, {whitelist: true, forbidNonWhitelisted: true});\n  if (errors?.length) {\n    const errorMsgs = errors.map((e) => e.toString()).join('\\n');\n    throw new Error(`${errorMessage}\\n${errorMsgs}`);\n  }\n}\n\nexport function extensionIsTs(ext: string): boolean {\n  return ext === '.ts';\n}\n\nexport function extensionIsYamlOrJSON(ext: string): boolean {\n  return ext === '.yaml' || ext === '.yml' || ext === '.json';\n}\n\nexport function forbidNonWhitelisted(keys: any, validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: 'forbidNonWhitelisted',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const isValid = !Object.keys(value).some((key) => !(key in keys));\n          if (!isValid) {\n            throw new Error(\n              `Invalid keys present in value: ${JSON.stringify(value)}. Whitelisted keys: ${JSON.stringify(\n                Object.keys(keys)\n              )}`\n            );\n          }\n          return isValid;\n        },\n      },\n    });\n  };\n}\n\nexport function IsNetworkEndpoint<T extends object>(cls: ClassConstructor<T>, validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string): void {\n    registerDecorator({\n      name: 'IsNetworkEndpoint',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [],\n      options: {message: 'Invalid network endpoint'},\n      validator: {\n        validate(value: string | string[] | Record<string, CommonEndpointConfig>, args: ValidationArguments) {\n          if (typeof value === 'string') {\n            return true;\n          }\n          if (Array.isArray(value)) {\n            return value.every((v) => typeof v === 'string');\n          }\n          if (typeof value === 'object') {\n            return (\n              Object.keys(value).every((v) => typeof v === 'string') &&\n              Object.values(value).every((v) => {\n                const instance = plainToInstance(cls, v);\n                const errors = validateSync(instance);\n                return errors === undefined || !errors.length;\n              })\n            );\n          }\n          return false;\n        },\n      },\n    });\n  };\n}\n\n// Overload the function so that if input is undefineable then output is undefineable\nexport function normalizeNetworkEndpoints<T extends IEndpointConfig = IEndpointConfig>(\n  input: string | string[] | Record<string, T>,\n  defaultConfig?: T\n): Record<string, T>;\nexport function normalizeNetworkEndpoints<T extends IEndpointConfig = IEndpointConfig>(\n  input: string | string[] | Record<string, T> | undefined,\n  defaultConfig: T\n): Record<string, T> | undefined {\n  if (typeof input === 'string') {\n    return {[input]: defaultConfig ?? {}};\n  } else if (Array.isArray(input)) {\n    return input.reduce(\n      (acc, endpoint) => {\n        acc[endpoint] = defaultConfig ?? {};\n        return acc;\n      },\n      {} as Record<string, T>\n    );\n  }\n\n  for (const key in input) {\n    // Yaml can make this null so we ensure it exists\n    input[key] = input[key] ?? {};\n  }\n  return input;\n}\n\nexport function notifyUpdates(pjson: Package, logger: Pino.Logger): void {\n  const notifier = updateNotifier({pkg: pjson, updateCheckInterval: 0});\n\n  const latestVersion = notifier.update ? notifier.update.latest : pjson.version;\n\n  if (notifier.update && lt(pjson.version, latestVersion)) {\n    logger.info(`Update available: ${pjson.version} → ${latestVersion}`);\n  } else {\n    logger.info(`Current ${pjson.name} version is ${pjson.version}`);\n  }\n}\n\nexport function toJsonObject(object: unknown): unknown {\n  // When using plainToInstance or plainToClass, Map types will need to be converted to a JSON object\n  // https://github.com/typestack/class-transformer/issues/1256#issuecomment-1175153352\n  return JSON.parse(\n    JSON.stringify(object, (_, value: unknown) => {\n      if (value instanceof Map) {\n        return mapToObject(value);\n      }\n      return value;\n    })\n  );\n}\n\nexport function mapToObject(map: Map<string | number, unknown>): Record<string | number, unknown> {\n  // XXX can use Object.entries with newer versions of node.js\n  const assetsObj: Record<string, unknown> = {};\n  for (const key of map.keys()) {\n    assetsObj[key] = map.get(key);\n  }\n  return assetsObj;\n}\n\n@ValidatorConstraint({name: 'isFileReference', async: false})\nexport class FileReferenceImp<T> implements ValidatorConstraintInterface {\n  validate(value: Map<string, T>): boolean {\n    if (!value) {\n      return false;\n    }\n    return !!Object.values(value).find((fileReference: T) => this.isValidFileReference(fileReference));\n  }\n  defaultMessage(args: ValidationArguments): string {\n    return `${JSON.stringify(args.value)} is not a valid assets format`;\n  }\n\n  private isValidFileReference(fileReference: T): boolean {\n    return (\n      fileReference &&\n      typeof fileReference === 'object' &&\n      'file' in fileReference &&\n      typeof fileReference.file === 'string'\n    );\n  }\n}\n\nexport const tsProjectYamlPath = (tsManifestEntry: string) => tsManifestEntry.replace('.ts', '.yaml');\n\n@ValidatorConstraint({async: false})\nexport class IsEndBlockGreater implements ValidatorConstraintInterface {\n  validate(endBlock: number, args: ValidationArguments) {\n    const object = args.object as BaseDataSource;\n    return object.startBlock !== undefined && object.endBlock !== undefined\n      ? object.endBlock >= object.startBlock\n      : true;\n  }\n\n  defaultMessage(args: ValidationArguments) {\n    return 'End block must be greater than or equal to start block';\n  }\n}\n"]}