"use strict";
// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors
// SPDX-License-Identifier: GPL-3.0
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.streamCat = streamCat;
const axios_1 = __importDefault(require("axios"));
async function* streamCat(baseUrl, ipfsCID) {
    const url = new URL(`${baseUrl}/cat?progress=true`);
    url.searchParams.append('arg', ipfsCID);
    try {
        const res = await axios_1.default.post(url.toString(), {}, {
            responseType: 'stream',
        });
        // Iterate over the stream and yield data
        for await (const chunk of res.data) {
            yield chunk;
        }
    }
    catch (error) {
        throw new Error(`Failed to fetch data from IPFS for CID ${ipfsCID}`);
    }
}
//# sourceMappingURL=utils.js.map