{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {\n  BlockFilter,\n  CommonSubqueryProject,\n  IEndpointConfig,\n  IProjectNetworkConfig,\n  NodeOptions,\n  NodeSpec,\n  ParentProject,\n  QuerySpec,\n  RunnerSpecs,\n} from '@subql/types-core';\nimport {Transform, TransformFnParams, Type} from 'class-transformer';\nimport {\n  Equals,\n  IsBoolean,\n  IsNumber,\n  IsObject,\n  IsOptional,\n  IsString,\n  IsInt,\n  Validate,\n  ValidateNested,\n  IsArray,\n  IsNotEmpty,\n  Allow,\n  ValidateIf,\n  IsPositive,\n  IsIn,\n} from 'class-validator';\nimport {IsNetworkEndpoint, SemverVersionValidator} from '../../utils';\nimport {FileType} from '../base';\n\nexport class RunnerQueryBaseModel implements QuerySpec {\n  @IsIn(['@subql/query', '@subql/query-subgraph'])\n  name!: string;\n  @IsString()\n  @Validate(SemverVersionValidator)\n  // @Matches(RUNNER_REGEX)\n  version!: string;\n}\n\nexport class RunnerNodeImpl implements NodeSpec {\n  @IsString()\n  name!: string;\n  @IsString()\n  @Validate(SemverVersionValidator)\n  // @Matches(RUNNER_REGEX,{message: 'runner version is not correct'})\n  version!: string;\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerNodeOptionsModel)\n  options?: NodeOptions;\n}\n\nexport class RunnerNodeOptionsModel implements NodeOptions {\n  @IsOptional()\n  @IsBoolean()\n  historical?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  unsafe?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  unfinalizedBlocks?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  skipTransactions?: boolean;\n}\n\nexport class BlockFilterImpl implements BlockFilter {\n  @IsOptional()\n  @IsInt()\n  modulo?: number;\n  @IsOptional()\n  @IsString()\n  timestamp?: string;\n}\n\nexport class ParentProjectModel implements ParentProject {\n  @IsNumber()\n  @ValidateIf((obj, value) => value !== null || obj.unitlBlock === null || obj.untilBlock === undefined)\n  block!: number;\n  @IsNumber()\n  @ValidateIf((obj, value) => value !== null || obj.block === null || obj.block === undefined)\n  untilBlock!: number;\n  @IsString()\n  reference!: string;\n}\n\n// Use for generic project validation only\nexport class CommonProjectManifestV1_0_0Impl<D extends object = any> implements CommonSubqueryProject {\n  @Allow()\n  definitions!: object;\n  @IsString()\n  @IsOptional()\n  description?: string;\n  @IsOptional()\n  @IsString()\n  repository?: string;\n  @Equals('1.0.0')\n  specVersion!: string;\n  // To be validated in specific manifest type\n  @IsArray()\n  dataSources!: any[];\n  @ValidateNested()\n  @Type(() => CommonProjectNetworkV1_0_0)\n  network!: IProjectNetworkConfig;\n  @IsString()\n  @IsOptional()\n  name?: string;\n  @IsString()\n  version!: string;\n  @ValidateNested()\n  @Type(() => FileType)\n  schema!: FileType;\n  @IsOptional()\n  @IsArray()\n  templates?: any[];\n  @IsObject()\n  @ValidateNested()\n  @Type(() => CommonRunnerSpecsImpl)\n  runner!: RunnerSpecs;\n  @IsOptional()\n  @IsObject()\n  @Type(() => ParentProjectModel)\n  parent?: ParentProject;\n  readonly deployment!: D;\n}\n\nexport class CommonRunnerSpecsImpl implements RunnerSpecs {\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerNodeImpl)\n  node!: NodeSpec;\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerQueryBaseModel)\n  query!: QuerySpec;\n}\n\nexport class CommonEndpointConfig implements IEndpointConfig {\n  @IsOptional()\n  // Class validator doesn't have any way of validating records\n  headers?: Record<string, string>;\n}\n\nexport class CommonProjectNetworkV1_0_0<C = any> implements IProjectNetworkConfig {\n  @IsOptional()\n  @IsNetworkEndpoint(CommonEndpointConfig)\n  endpoint!: string | string[] | Record<string, CommonEndpointConfig>;\n  @IsString({each: true})\n  @IsOptional()\n  dictionary!: string | string[];\n  @IsNotEmpty()\n  @Transform(({value}: TransformFnParams) => value.trim())\n  @IsString()\n  chainId!: string;\n  @IsOptional()\n  chaintypes?: C; // ensure lowercase to keep consistency\n  @IsOptional()\n  @IsArray()\n  bypassBlocks?: (number | `${number}-${number}`)[];\n}\n"]}