{"version":3,"file":"modular.js","sourceRoot":"","sources":["../src/modular.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {INetworkCommonModule} from '@subql/types-core';\nimport {Data} from 'ejs';\nimport type {Interface} from 'ethers/lib/utils';\nimport {SubqlCustomDatasource, SubqlDatasource, SubqlRuntimeDatasource} from './project';\n\nexport interface EthereumNetworkModule\n  extends INetworkCommonModule<SubqlDatasource, SubqlRuntimeDatasource, SubqlCustomDatasource> {\n  generateAbis(\n    datasources: SubqlRuntimeDatasource[],\n    projectPath: string,\n    prepareDirPath: (path: string, recreate: boolean) => Promise<void>,\n    upperFirst: (input?: string) => string,\n    renderTemplate: (templatePath: string, outputPath: string, templateData: Data) => Promise<void>\n  ): Promise<void>;\n  parseContractPath(path: string): {name: string; rawName: string; path: string[]};\n  getAbiInterface(projectPath: string, abiFileName: string): Interface;\n}\n"]}