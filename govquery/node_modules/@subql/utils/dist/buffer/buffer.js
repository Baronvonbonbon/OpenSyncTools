"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.blake2AsU8a = exports.blake2AsHex = exports.isNull = exports.isBuffer = exports.isString = exports.isHex = exports.isU8a = exports.u8aToBuffer = exports.u8aConcat = exports.u8aToHex = exports.numberToU8a = exports.bufferToU8a = exports.hexToU8a = exports.u8aEq = void 0;
var util_1 = require("@polkadot/util");
Object.defineProperty(exports, "u8aEq", { enumerable: true, get: function () { return util_1.u8aEq; } });
Object.defineProperty(exports, "hexToU8a", { enumerable: true, get: function () { return util_1.hexToU8a; } });
Object.defineProperty(exports, "bufferToU8a", { enumerable: true, get: function () { return util_1.bufferToU8a; } });
Object.defineProperty(exports, "numberToU8a", { enumerable: true, get: function () { return util_1.numberToU8a; } });
Object.defineProperty(exports, "u8aToHex", { enumerable: true, get: function () { return util_1.u8aToHex; } });
Object.defineProperty(exports, "u8aConcat", { enumerable: true, get: function () { return util_1.u8aConcat; } });
Object.defineProperty(exports, "u8aToBuffer", { enumerable: true, get: function () { return util_1.u8aToBuffer; } });
Object.defineProperty(exports, "isU8a", { enumerable: true, get: function () { return util_1.isU8a; } });
Object.defineProperty(exports, "isHex", { enumerable: true, get: function () { return util_1.isHex; } });
Object.defineProperty(exports, "isString", { enumerable: true, get: function () { return util_1.isString; } });
Object.defineProperty(exports, "isBuffer", { enumerable: true, get: function () { return util_1.isBuffer; } });
Object.defineProperty(exports, "isNull", { enumerable: true, get: function () { return util_1.isNull; } });
var util_crypto_1 = require("@polkadot/util-crypto");
Object.defineProperty(exports, "blake2AsHex", { enumerable: true, get: function () { return util_crypto_1.blake2AsHex; } });
Object.defineProperty(exports, "blake2AsU8a", { enumerable: true, get: function () { return util_crypto_1.blake2AsU8a; } });
//# sourceMappingURL=buffer.js.map