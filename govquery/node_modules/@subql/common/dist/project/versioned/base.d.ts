import { FileReference } from '../types';
export declare abstract class ProjectManifestBaseImpl<D extends object> {
    definitions: object;
    description: string;
    repository: string;
    specVersion: string;
    abstract readonly deployment: D;
    toDeployment(): string;
    validate(): void;
}
export interface BaseDataSource<F = any, H extends BaseHandler<F> = BaseHandler<F>, T extends BaseMapping<F, H> = BaseMapping<F, H>> {
    name?: string;
    kind: string;
    startBlock?: number;
    mapping: T;
}
export interface BaseCustomDataSource<F = any, H extends BaseHandler<F> = BaseHandler<F>, T extends BaseMapping<F, H> = BaseMapping<F, H>> extends BaseDataSource<F, H, T> {
    processor: FileReference;
    assets: Map<string, FileReference>;
}
export interface BaseMapping<F, T extends BaseHandler<F>> {
    file: string;
    handlers: T[];
}
export interface BaseHandler<T> {
    handler: string;
    kind: string;
    filter?: T;
}
