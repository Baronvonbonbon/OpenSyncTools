{"version":3,"file":"models.js","sourceRoot":"","sources":["../../../../src/project/versioned/v1_0_0/models.ts"],"names":[],"mappings":";AAAA,gEAAgE;AAChE,sCAAsC;;;;;;;;;;;;AAEtC,yDAAuC;AACvC,qDAAqH;AAErH,uCAAmD;AAGnD,MAAa,oBAAoB;CAOhC;AANC;IAAC,IAAA,wBAAM,EAAC,cAAc,CAAC;;kDACV;AACb;IAAC,IAAA,0BAAQ,GAAE;IACV,IAAA,0BAAQ,EAAC,8BAAsB,CAAC;IACjC,yBAAyB;;;qDACT;AANlB,oDAOC;AAED,MAAa,cAAc;CAY1B;AAXC;IAAC,IAAA,0BAAQ,GAAE;;4CACE;AACb;IAAC,IAAA,0BAAQ,GAAE;IACV,IAAA,0BAAQ,EAAC,8BAAsB,CAAC;IACjC,oEAAoE;;;+CACpD;AAChB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,0BAAQ,GAAE;IACV,IAAA,gCAAc,GAAE;IAChB,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,sBAAsB,CAAC;;+CACb;AAXxB,wCAYC;AAED,MAAa,sBAAsB;CAUlC;AATC;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,GAAE;;0DACS;AACrB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,GAAE;;sDACK;AACjB;IAAC,IAAA,4BAAU,GAAE;IACZ,IAAA,2BAAS,GAAE;;iEACgB;AAT9B,wDAUC","sourcesContent":["// Copyright 2020-2022 OnFinality Limited authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nimport {Type} from 'class-transformer';\nimport {Equals, IsBoolean, IsObject, IsOptional, IsString, Matches, Validate, ValidateNested} from 'class-validator';\nimport {RUNNER_REGEX} from '../../../constants';\nimport {SemverVersionValidator} from '../../utils';\nimport {NodeOptions, NodeSpec, QuerySpec} from './types';\n\nexport class RunnerQueryBaseModel implements QuerySpec {\n  @Equals('@subql/query')\n  name: string;\n  @IsString()\n  @Validate(SemverVersionValidator)\n  // @Matches(RUNNER_REGEX)\n  version: string;\n}\n\nexport class RunnerNodeImpl implements NodeSpec {\n  @IsString()\n  name: string;\n  @IsString()\n  @Validate(SemverVersionValidator)\n  // @Matches(RUNNER_REGEX,{message: 'runner version is not correct'})\n  version: string;\n  @IsOptional()\n  @IsObject()\n  @ValidateNested()\n  @Type(() => RunnerNodeOptionsModel)\n  options?: NodeOptions;\n}\n\nexport class RunnerNodeOptionsModel implements NodeOptions {\n  @IsOptional()\n  @IsBoolean()\n  historical?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  unsafe?: boolean;\n  @IsOptional()\n  @IsBoolean()\n  unfinalizedBlocks?: boolean;\n}\n"]}