"use strict";
// Copyright 2020-2022 OnFinality Limited authors & contributors
// SPDX-License-Identifier: Apache-2.0
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RunnerNodeOptionsModel = exports.RunnerNodeImpl = exports.RunnerQueryBaseModel = void 0;
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const utils_1 = require("../../utils");
class RunnerQueryBaseModel {
}
__decorate([
    (0, class_validator_1.Equals)('@subql/query'),
    __metadata("design:type", String)
], RunnerQueryBaseModel.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Validate)(utils_1.SemverVersionValidator)
    // @Matches(RUNNER_REGEX)
    ,
    __metadata("design:type", String)
], RunnerQueryBaseModel.prototype, "version", void 0);
exports.RunnerQueryBaseModel = RunnerQueryBaseModel;
class RunnerNodeImpl {
}
__decorate([
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], RunnerNodeImpl.prototype, "name", void 0);
__decorate([
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.Validate)(utils_1.SemverVersionValidator)
    // @Matches(RUNNER_REGEX,{message: 'runner version is not correct'})
    ,
    __metadata("design:type", String)
], RunnerNodeImpl.prototype, "version", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsObject)(),
    (0, class_validator_1.ValidateNested)(),
    (0, class_transformer_1.Type)(() => RunnerNodeOptionsModel),
    __metadata("design:type", Object)
], RunnerNodeImpl.prototype, "options", void 0);
exports.RunnerNodeImpl = RunnerNodeImpl;
class RunnerNodeOptionsModel {
}
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RunnerNodeOptionsModel.prototype, "historical", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RunnerNodeOptionsModel.prototype, "unsafe", void 0);
__decorate([
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], RunnerNodeOptionsModel.prototype, "unfinalizedBlocks", void 0);
exports.RunnerNodeOptionsModel = RunnerNodeOptionsModel;
//# sourceMappingURL=models.js.map