"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BuilderPluginBase = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _mkdirp = require("mkdirp");

var _path = require("path");

var _fs = require("fs");

var _header = require("../utils/header");

var _generator = _interopRequireDefault(require("@babel/generator"));

var t = _interopRequireWildcard(require("@babel/types"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * BuilderPluginBase enable ts-codegen users implement their own plugins by only implement a few functions.
 */
var BuilderPluginBase = /*#__PURE__*/function () {
  function BuilderPluginBase(opt, builder) {
    (0, _classCallCheck2["default"])(this, BuilderPluginBase);
    (0, _defineProperty2["default"])(this, "builder", void 0);
    (0, _defineProperty2["default"])(this, "option", void 0);
    (0, _defineProperty2["default"])(this, "utils", void 0);
    this.option = opt;
    this.builder = builder;
  }

  (0, _createClass2["default"])(BuilderPluginBase, [{
    key: "setBuilder",
    value: function setBuilder(builder) {
      this.builder = builder;
    }
  }, {
    key: "render",
    value: function () {
      var _render = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(name, contractInfo, outPath) {
        var _this = this;

        var enabled, context, results;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                enabled = this.option.enabled;

                if (enabled) {
                  _context.next = 3;
                  break;
                }

                return _context.abrupt("return");

              case 3:
                context = this.initContext(contractInfo, this.option);
                _context.next = 6;
                return this.doRender(name, context);

              case 6:
                results = _context.sent;

                if (!(!results || !results.length)) {
                  _context.next = 9;
                  break;
                }

                return _context.abrupt("return", []);

              case 9:
                return _context.abrupt("return", results.map(function (result) {
                  var imports = context.getImports(_this.utils, result.localname);
                  var code = _header.header + (0, _generator["default"])(t.program([].concat((0, _toConsumableArray2["default"])(imports), (0, _toConsumableArray2["default"])(result.body)))).code;
                  (0, _mkdirp.sync)(outPath);
                  var filename = (0, _path.join)(outPath, result.localname);
                  (0, _fs.writeFileSync)(filename, code);
                  return {
                    type: result.type,
                    pluginType: result.pluginType,
                    contract: name,
                    localname: result.localname,
                    filename: filename
                  };
                }));

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function render(_x, _x2, _x3) {
        return _render.apply(this, arguments);
      }

      return render;
    }()
    /**
     * init context here
     * @param contract
     * @param options
     */

  }]);
  return BuilderPluginBase;
}();

exports.BuilderPluginBase = BuilderPluginBase;