{"version":3,"file":"project.spec.js","sourceRoot":"","sources":["../../src/project/project.spec.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport fs from 'fs';\nimport path from 'path';\nimport {loadFromJsonOrYaml, RunnerQueryBaseModel} from '@subql/common';\nimport {validateSync} from 'class-validator';\nimport {DeploymentV1_0_0, EthereumRunnerNodeImpl, EthereumRunnerSpecsImpl} from '../project/versioned/v1_0_0';\nimport {EthereumProjectManifestVersioned, VersionedProjectManifest} from './versioned';\n\nconst projectsDir = path.join(__dirname, '../../test');\n\nfunction loadEthereumProjectManifest(file: string): EthereumProjectManifestVersioned {\n  let manifestPath = file;\n  if (fs.existsSync(file) && fs.lstatSync(file).isDirectory()) {\n    const yamlFilePath = path.join(file, 'project.yaml');\n    const jsonFilePath = path.join(file, 'project.json');\n    if (fs.existsSync(yamlFilePath)) {\n      manifestPath = yamlFilePath;\n    } else if (fs.existsSync(jsonFilePath)) {\n      manifestPath = jsonFilePath;\n    } else {\n      throw new Error(`Could not find project manifest under dir ${file}`);\n    }\n  }\n\n  const doc = loadFromJsonOrYaml(manifestPath);\n  const projectManifest = new EthereumProjectManifestVersioned(doc as VersionedProjectManifest);\n  projectManifest.validate();\n  return projectManifest;\n}\n\ndescribe('test eth project.yaml', () => {\n  it('could get eth project template name from its deployment', () => {\n    const manifest = loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'));\n    const deployment = manifest.toDeployment();\n    expect(deployment).toContain('name: Pool');\n  });\n\n  it('could get options in template from its deployment', () => {\n    const manifest = loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'));\n    const deployment = manifest.toDeployment();\n    expect(deployment).toContain('abi: Pool');\n  });\n});\n\ndescribe('project.yaml', () => {\n  it('can validate project.yaml', () => {\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_falsy.yaml'))).toThrow();\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_falsy_array.yaml'))).toThrow();\n  });\n\n  it('can fail validation if version not supported', () => {\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_invalid_version.yaml'))).toThrow();\n  });\n\n  it('can validate a v1.0.0 project.yaml with templates', () => {\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'))).not.toThrow();\n  });\n\n  it('get v1.0.0 deployment mapping filter', () => {\n    const manifestVersioned = loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml'));\n\n    const deployment = manifestVersioned.asV1_0_0.deployment;\n    const filter = deployment.dataSources[0].mapping.handlers[0].filter;\n    const deploymentString = manifestVersioned.toDeployment();\n    expect(filter).not.toBeNull();\n    expect(deploymentString).toContain('Transfer (address from, address to, uint256 tokenId)');\n  });\n\n  it('can convert genesis hash in v1.0.0 to chainId in deployment', () => {\n    const deployment = loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0.yaml')).asV1_0_0.deployment;\n    expect(deployment.network.chainId).not.toBeNull();\n    console.log(deployment.network.chainId);\n  });\n\n  it.skip('can get chainId for deployment', () => {\n    const deployment = loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0_chainId.yaml')).asV1_0_0\n      .deployment;\n    expect(deployment.network.chainId).toBe('moonbeamChainId');\n  });\n\n  it('can validate deployment runner versions', () => {\n    const deployment = new DeploymentV1_0_0();\n    const nodeImp = new EthereumRunnerNodeImpl();\n    const queryImp = new RunnerQueryBaseModel();\n    deployment.specVersion = '1.0.0';\n    deployment.runner = new EthereumRunnerSpecsImpl();\n\n    nodeImp.name = '@subql/node-ethereum';\n    nodeImp.version = '*';\n    deployment.runner.node = nodeImp;\n\n    queryImp.name = '@subql/query';\n    queryImp.version = '0.213.1';\n\n    deployment.runner.query = queryImp;\n\n    const errors = validateSync(deployment.runner, {whitelist: true, forbidNonWhitelisted: true});\n    expect(errors.length).toBe(0);\n  });\n\n  it('can validate a v1.0.0 project.yaml with unsupported runner node', () => {\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0_bad_runner.yaml'))).toThrow();\n  });\n\n  //TODO, pre-release should be excluded\n  it.skip('can throw error with unsupported runner version', () => {\n    expect(() =>\n      loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0_bad_runner_version.yaml'))\n    ).toThrow();\n  });\n\n  it('can validate a v1.0.0 project.yaml runner and datasource mismatches', () => {\n    expect(() =>\n      loadEthereumProjectManifest(path.join(projectsDir, 'project_1.0.0_runner_ds_mismatch.yaml'))\n    ).toThrow();\n  });\n\n  it('can fail validation if custom ds missing processor', () => {\n    expect(() => loadEthereumProjectManifest(path.join(projectsDir, 'project_0.2.0_invalid_custom_ds.yaml'))).toThrow();\n  });\n});\n"]}