{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/project/models.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {BaseDataSource} from '@subql/common';\nimport {FileReference} from '@subql/types-core';\nimport {\n  EthereumHandlerKind,\n  EthereumDatasourceKind,\n  EthereumLogFilter,\n  SubqlCustomHandler,\n  SubqlMapping,\n  SubqlHandler,\n  SubqlRuntimeHandler,\n  SubqlRuntimeDatasource,\n  SubqlCustomDatasource,\n  EthereumBlockFilter,\n  SubqlBlockHandler,\n  SubqlEventHandler,\n  SubqlCallHandler,\n  EthereumTransactionFilter,\n} from '@subql/types-ethereum';\nimport {plainToClass, Transform, Type} from 'class-transformer';\nimport {\n  IsArray,\n  IsEnum,\n  IsInt,\n  IsOptional,\n  IsString,\n  IsObject,\n  ValidateNested,\n  registerDecorator,\n  ValidationOptions,\n  ValidationArguments,\n} from 'class-validator';\nimport {SubqlEthereumDatasourceKind, SubqlEthereumHandlerKind, SubqlEthereumProcessorOptions} from './types';\nimport {IsEthereumOrZilliqaAddress} from './utils';\n\nexport class BlockFilter implements EthereumBlockFilter {\n  @IsOptional()\n  @IsInt()\n  modulo?: number;\n  @IsOptional()\n  @IsString()\n  timestamp?: string;\n}\n\nexport class LogFilter implements EthereumLogFilter {\n  @IsOptional()\n  @IsArray()\n  topics?: string[];\n}\n\nexport class TransactionFilter implements EthereumTransactionFilter {\n  @IsOptional()\n  @IsString()\n  from?: string;\n  @IsOptional()\n  @IsString()\n  to?: string;\n  @IsOptional()\n  @IsString()\n  function?: string | null;\n  @IsOptional()\n  @IsString()\n  type?: `0x${string}`;\n}\n\nexport function forbidNonWhitelisted(keys: any, validationOptions?: ValidationOptions) {\n  return function (object: object, propertyName: string) {\n    registerDecorator({\n      name: 'forbidNonWhitelisted',\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [],\n      options: validationOptions,\n      validator: {\n        validate(value: any, args: ValidationArguments) {\n          const isValid = !Object.keys(value).some((key) => !(key in keys));\n          if (!isValid) {\n            throw new Error(\n              `Invalid keys present in value: ${JSON.stringify(value)}. Whitelisted keys: ${JSON.stringify(\n                Object.keys(keys)\n              )}`\n            );\n          }\n          return isValid;\n        },\n      },\n    });\n  };\n}\n\nexport class BlockHandler implements SubqlBlockHandler {\n  @IsObject()\n  @IsOptional()\n  @Type(() => BlockFilter)\n  filter?: BlockFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.EthBlock]})\n  kind!: EthereumHandlerKind.Block;\n  @IsString()\n  handler!: string;\n}\n\nexport class CallHandler implements SubqlCallHandler {\n  @forbidNonWhitelisted({from: '', to: '', function: '', type: ''})\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => TransactionFilter)\n  filter?: EthereumTransactionFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.EthCall]})\n  kind!: EthereumHandlerKind.Call;\n  @IsString()\n  handler!: string;\n}\n\nexport class EventHandler implements SubqlEventHandler {\n  @forbidNonWhitelisted({topics: ''})\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => LogFilter)\n  filter?: EthereumLogFilter;\n  @IsEnum(SubqlEthereumHandlerKind, {groups: [SubqlEthereumHandlerKind.EthEvent]})\n  kind!: EthereumHandlerKind.Event;\n  @IsString()\n  handler!: string;\n}\n\nexport class CustomHandler implements SubqlCustomHandler {\n  @IsString()\n  kind!: string;\n  @IsString()\n  handler!: string;\n  @IsObject()\n  @IsOptional()\n  filter?: Record<string, unknown>;\n}\n\nexport class EthereumMapping implements SubqlMapping {\n  @Transform((params) => {\n    const handlers: SubqlHandler[] = params.value;\n    return handlers.map((handler) => {\n      switch (handler.kind) {\n        case SubqlEthereumHandlerKind.EthEvent:\n          return plainToClass(EventHandler, handler);\n        case SubqlEthereumHandlerKind.EthCall:\n          return plainToClass(CallHandler, handler);\n        case SubqlEthereumHandlerKind.EthBlock:\n          return plainToClass(BlockHandler, handler);\n        default:\n          throw new Error(`handler ${(handler as any).kind} not supported`);\n      }\n    });\n  })\n  @IsArray()\n  @ValidateNested()\n  handlers!: SubqlHandler[];\n  @IsString()\n  file!: string;\n}\n\nexport class CustomMapping implements SubqlMapping<SubqlCustomHandler> {\n  @IsArray()\n  @Type(() => CustomHandler)\n  @ValidateNested()\n  handlers!: CustomHandler[];\n  @IsString()\n  file!: string;\n}\n\nexport class EthereumProcessorOptions implements SubqlEthereumProcessorOptions {\n  @IsOptional()\n  @IsString()\n  abi?: string;\n  @IsOptional()\n  @IsEthereumOrZilliqaAddress()\n  address?: string;\n}\n\nexport class RuntimeDataSourceBase<M extends SubqlMapping<SubqlRuntimeHandler>>\n  extends BaseDataSource\n  implements SubqlRuntimeDatasource<M>\n{\n  @IsEnum(SubqlEthereumDatasourceKind, {\n    groups: [SubqlEthereumDatasourceKind.EthRuntime],\n  })\n  kind!: EthereumDatasourceKind.Runtime;\n  @Type(() => EthereumMapping)\n  @ValidateNested()\n  mapping!: M;\n  @Type(() => FileReferenceImpl)\n  @ValidateNested({each: true})\n  @IsOptional()\n  assets?: Map<string, FileReference>;\n  @IsOptional()\n  @ValidateNested()\n  @Type(() => EthereumProcessorOptions)\n  options?: EthereumProcessorOptions;\n}\n\nexport class FileReferenceImpl implements FileReference {\n  @IsString()\n  file!: string;\n}\n\nexport class CustomDataSourceBase<K extends string, M extends SubqlMapping = SubqlMapping<SubqlCustomHandler>>\n  extends BaseDataSource\n  implements SubqlCustomDatasource<K, M>\n{\n  @IsString()\n  kind!: K;\n  @Type(() => CustomMapping)\n  @ValidateNested()\n  mapping!: M;\n  @Type(() => FileReferenceImpl)\n  @ValidateNested({each: true})\n  assets!: Map<string, FileReference>;\n  @Type(() => FileReferenceImpl)\n  @IsObject()\n  processor!: FileReference;\n  @IsOptional()\n  @ValidateNested()\n  options?: EthereumProcessorOptions;\n}\n"]}