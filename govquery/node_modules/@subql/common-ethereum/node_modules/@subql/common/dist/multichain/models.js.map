{"version":3,"file":"models.js","sourceRoot":"","sources":["../../src/multichain/models.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;;;;;;;;;;AAGnC,yDAAuC;AACvC,qDAA2D;AAC3D,wCAAgD;AAEhD,MAAa,8BAA8B;IAEzC,WAAW,CAAU;IAErB,QAAQ,CAAY;IAGpB,KAAK,CAAa;CACnB;AARD,wEAQC;AANC;IADC,IAAA,wBAAM,EAAC,OAAO,CAAC;;mEACK;AAErB;IADC,IAAA,0BAAQ,EAAC,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC;;gEACH;AAGpB;IAFC,IAAA,0BAAQ,GAAE;IACV,IAAA,wBAAI,EAAC,GAAG,EAAE,CAAC,8BAAoB,CAAC;;6DACf","sourcesContent":["// Copyright 2020-2025 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {MultichainProjectManifest, QuerySpec} from '@subql/types-core';\nimport {Type} from 'class-transformer';\nimport {Equals, IsObject, IsString} from 'class-validator';\nimport {RunnerQueryBaseModel} from '../project';\n\nexport class MultichainProjectManifestModel implements MultichainProjectManifest {\n  @Equals('1.0.0')\n  specVersion!: string;\n  @IsString({each: true})\n  projects!: string[];\n  @IsObject()\n  @Type(() => RunnerQueryBaseModel)\n  query!: QuerySpec;\n}\n"]}