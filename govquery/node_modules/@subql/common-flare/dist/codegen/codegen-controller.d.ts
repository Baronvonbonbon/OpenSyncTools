import { SubqlRuntimeDatasource } from '@subql/types-flare';
import { Data } from 'ejs';
export interface AbiRenderProps {
    name: string;
    events: string[];
    functions: {
        typeName: string;
        functionName: string;
    }[];
}
export interface AbiInterface {
    name: string;
    type: 'event' | 'function';
    inputs: AbiInput[];
}
type AbiInput = {
    internalType: string;
    components?: AbiInput[];
    name: string;
    type: string;
};
export declare function joinInputAbiName(abiObject: AbiInterface): string;
export declare function prepareSortedAssets(datasources: SubqlRuntimeDatasource[], projectPath: string): Record<string, string>;
export declare function prepareAbiJob(sortedAssets: Record<string, string>, projectPath: string, loadReadAbi: (filePath: string) => AbiInterface[] | {
    abi: AbiInterface[];
}): AbiRenderProps[];
export declare function getAbiNames(files: string[]): string[];
export declare function generateAbis(datasources: SubqlRuntimeDatasource[], projectPath: string, prepareDirPath: (path: string, recreate: boolean) => Promise<void>, upperFirst: (input?: string) => string, renderTemplate: (templatePath: string, outputPath: string, templateData: Data) => Promise<void>): Promise<void>;
export {};
