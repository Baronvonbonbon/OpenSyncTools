{"version":3,"file":"github-reader.js","sourceRoot":"","sources":["../../../src/project/readers/github-reader.ts"],"names":[],"mappings":";AAAA,8DAA8D;AAC9D,mCAAmC;;;;;;AAEnC,qCAA+B;AAC/B,gDAAwB;AAExB,kDAA0D;AAC1D,sDAA2B;AAE3B,oCAA0C;AAE1C,MAAa,YAAY;IAIM;IAHZ,GAAG,CAAgB;IAC5B,aAAa,CAAU;IAE/B,YAA6B,GAAW;QAAX,QAAG,GAAH,GAAG,CAAQ;QACtC,IAAI,CAAC,GAAG,GAAG,eAAK,CAAC,MAAM,CAAC;YACtB,OAAO,EAAE,qCAAqC,GAAG,EAAE;SACpD,CAAC,CAAC;IACL,CAAC;IAED,IAAI,IAAI;QACN,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,KAAK,CAAC,MAAM;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAA8C,CAAC;IACnF,CAAC;IAED,KAAK,CAAC,gBAAgB;QACpB,yCAAyC;QACzC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,wBAAgB,CAAC,CAAC;QACzD,OAAO,iBAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAChC,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,QAAgB;QAC5B,IAAI;YACF,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAC7C,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAC;YAC/D,OAAO,IAAI,CAAC;SACb;QAAC,OAAO,GAAG,EAAE;YACZ,MAAM,IAAI,KAAK,CAAC,kCAAkC,EAAE,EAAC,KAAK,EAAE,GAAG,EAAC,CAAC,CAAC;SACnE;IACH,CAAC;IAEO,KAAK,CAAC,gBAAgB;QAC5B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;QACD,MAAM,EAAC,IAAI,EAAC,GAAG,MAAM,eAAK,CAAC,GAAG,CAC5B,gCAAgC,IAAI,CAAC,GAAG,EAAE,CAC3C,CAAC;QACF,IAAA,gBAAM,EAAC,IAAI,CAAC,cAAc,EAAE,4CAA4C,CAAC,CAAC;QAE1E,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC;QACzC,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;CACF;AA9CD,oCA8CC","sourcesContent":["// Copyright 2020-2024 SubQuery Pte Ltd authors & contributors\n// SPDX-License-Identifier: GPL-3.0\n\nimport {assert} from 'console';\nimport path from 'path';\nimport {Reader} from '@subql/types-core';\nimport axios, {AxiosInstance, AxiosResponse} from 'axios';\nimport yaml from 'js-yaml';\nimport {IPackageJson} from 'package-json-type';\nimport {DEFAULT_MANIFEST} from '../utils';\n\nexport class GithubReader implements Reader {\n  private readonly api: AxiosInstance;\n  private defaultBranch?: string;\n\n  constructor(private readonly key: string) {\n    this.api = axios.create({\n      baseURL: `https://raw.githubusercontent.com/${key}`,\n    });\n  }\n\n  get root(): undefined {\n    return undefined;\n  }\n\n  async getPkg(): Promise<IPackageJson> {\n    return this.getFile('package.json') as Promise<unknown> as Promise<IPackageJson>;\n  }\n\n  async getProjectSchema(): Promise<unknown> {\n    // Github reader not support ts manifest.\n    const projectYaml = await this.getFile(DEFAULT_MANIFEST);\n    return yaml.load(projectYaml);\n  }\n\n  async getFile(fileName: string): Promise<string> {\n    try {\n      const branch = await this.getDefaultBranch();\n      const {data} = await this.api.get(path.join(branch, fileName));\n      return data;\n    } catch (err) {\n      throw new Error('Failed to fetch file from github', {cause: err});\n    }\n  }\n\n  private async getDefaultBranch(): Promise<string> {\n    if (this.defaultBranch) {\n      return this.defaultBranch;\n    }\n    const {data} = await axios.get<any, AxiosResponse<{default_branch: string}, any>, any>(\n      `https://api.github.com/repos/${this.key}`\n    );\n    assert(data.default_branch, 'Failed to fetch default branch from github');\n\n    this.defaultBranch = data.default_branch;\n    return this.defaultBranch;\n  }\n}\n"]}